get following result SimpleName SimpleType SingleVariableDeclaration SimpleName that
that SimpleName InfixExpression IfStatement ReturnStatement BooleanLiteral false
true BooleanLiteral InfixExpression MethodInvocation SimpleName is set success
this present success SimpleName VariableDeclarationFragment InfixExpression BooleanLiteral true
this present success SimpleName VariableDeclarationFragment InfixExpression MethodInvocation SimpleName is set success
boolean PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName this present success
boolean PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression BooleanLiteral true
that SimpleName MethodInvocation SimpleName is set success
true BooleanLiteral InfixExpression MethodInvocation SimpleName that
true BooleanLiteral InfixExpression MethodInvocation SimpleName is set success
that present success SimpleName VariableDeclarationFragment InfixExpression BooleanLiteral true
that present success SimpleName VariableDeclarationFragment InfixExpression MethodInvocation SimpleName that
that present success SimpleName VariableDeclarationFragment InfixExpression MethodInvocation SimpleName is set success
boolean PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName that present success
boolean PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression BooleanLiteral true
this present success SimpleName InfixExpression SimpleName that present success
this present success SimpleName InfixExpression SimpleName that present success
success SimpleName FieldAccess MethodInvocation SimpleName equals
success SimpleName FieldAccess MethodInvocation QualifiedName thatsuccess
equals SimpleName MethodInvocation QualifiedName thatsuccess
boolean PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType boolean
boolean PrimitiveType VariableDeclarationStatement Block ReturnStatement BooleanLiteral true
boolean PrimitiveType VariableDeclarationStatement Block ReturnStatement BooleanLiteral true
public Modifier MethodDeclaration PrimitiveType boolean
public Modifier MethodDeclaration SimpleName equals
public Modifier MethodDeclaration SingleVariableDeclaration SimpleType SimpleName get following result
public Modifier MethodDeclaration SingleVariableDeclaration SimpleName that
public Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType boolean
public Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType boolean
public Modifier MethodDeclaration Block ReturnStatement BooleanLiteral true
boolean PrimitiveType MethodDeclaration SimpleName equals
boolean PrimitiveType MethodDeclaration SingleVariableDeclaration SimpleType SimpleName get following result
boolean PrimitiveType MethodDeclaration SingleVariableDeclaration SimpleName that
boolean PrimitiveType MethodDeclaration Block VariableDeclarationStatement PrimitiveType boolean
boolean PrimitiveType MethodDeclaration Block VariableDeclarationStatement PrimitiveType boolean
boolean PrimitiveType MethodDeclaration Block ReturnStatement BooleanLiteral true
equals SimpleName MethodDeclaration SingleVariableDeclaration SimpleType SimpleName get following result
equals SimpleName MethodDeclaration SingleVariableDeclaration SimpleName that
equals SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType boolean
equals SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType boolean
equals SimpleName MethodDeclaration Block ReturnStatement BooleanLiteral true
public Modifier TypeDeclaration SimpleName test
public Modifier TypeDeclaration MethodDeclaration Modifier public
public Modifier TypeDeclaration MethodDeclaration PrimitiveType boolean
public Modifier TypeDeclaration MethodDeclaration SimpleName equals
public Modifier TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName that
test SimpleName TypeDeclaration MethodDeclaration Modifier public
test SimpleName TypeDeclaration MethodDeclaration PrimitiveType boolean
test SimpleName TypeDeclaration MethodDeclaration SimpleName equals
test SimpleName TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName that
