double PrimitiveType SingleVariableDeclaration SimpleName y
empty NumberLiteral ArrayInitializer NumberLiteral empty
empty NumberLiteral ArrayInitializer NumberLiteral empty
empty NumberLiteral ArrayInitializer NumberLiteral empty
roots SimpleName VariableDeclarationFragment ArrayInitializer NumberLiteral empty
roots SimpleName VariableDeclarationFragment ArrayInitializer NumberLiteral empty
roots SimpleName VariableDeclarationFragment ArrayInitializer NumberLiteral empty
double PrimitiveType ArrayType VariableDeclarationStatement VariableDeclarationFragment SimpleName roots
find roots SimpleName MethodInvocation SimpleName y
find roots SimpleName MethodInvocation SimpleName roots
y SimpleName MethodInvocation SimpleName roots
num sol SimpleName VariableDeclarationFragment MethodInvocation SimpleName find roots
num sol SimpleName VariableDeclarationFragment MethodInvocation SimpleName y
num sol SimpleName VariableDeclarationFragment MethodInvocation SimpleName roots
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName num sol
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment MethodInvocation SimpleName find roots
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment MethodInvocation SimpleName y
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment MethodInvocation SimpleName roots
num sol SimpleName InfixExpression NumberLiteral empty
arrays SimpleName MethodInvocation SimpleName sort
arrays SimpleName MethodInvocation SimpleName roots
arrays SimpleName MethodInvocation NumberLiteral empty
arrays SimpleName MethodInvocation SimpleName num sol
sort SimpleName MethodInvocation SimpleName roots
sort SimpleName MethodInvocation NumberLiteral empty
sort SimpleName MethodInvocation SimpleName num sol
roots SimpleName MethodInvocation NumberLiteral empty
roots SimpleName MethodInvocation SimpleName num sol
empty NumberLiteral MethodInvocation SimpleName num sol
num sol SimpleName InfixExpression NumberLiteral empty
double PrimitiveType ArrayType ArrayCreation InfixExpression SimpleName num sol
double PrimitiveType ArrayType ArrayCreation InfixExpression NumberLiteral empty
segs SimpleName VariableDeclarationFragment ArrayCreation ArrayType PrimitiveType double
segs SimpleName VariableDeclarationFragment ArrayCreation InfixExpression SimpleName num sol
segs SimpleName VariableDeclarationFragment ArrayCreation InfixExpression NumberLiteral empty
double PrimitiveType ArrayType VariableDeclarationStatement VariableDeclarationFragment SimpleName segs
num segments SimpleName VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName num segments
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment NumberLiteral empty
segs SimpleName ArrayAccess PostfixExpression SimpleName num segments
segs SimpleName ArrayAccess Assignment NumberLiteral empty
num segments SimpleName PostfixExpression ArrayAccess Assignment NumberLiteral empty
i SimpleName VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment SimpleName i
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment NumberLiteral empty
i SimpleName InfixExpression SimpleName num sol
roots SimpleName ArrayAccess SimpleName i
r SimpleName VariableDeclarationFragment ArrayAccess SimpleName roots
r SimpleName VariableDeclarationFragment ArrayAccess SimpleName i
double PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName r
double PrimitiveType VariableDeclarationStatement VariableDeclarationFragment ArrayAccess SimpleName roots
double PrimitiveType VariableDeclarationStatement VariableDeclarationFragment ArrayAccess SimpleName i
r SimpleName InfixExpression NumberLiteral .
r SimpleName InfixExpression NumberLiteral .
num segments SimpleName InfixExpression NumberLiteral empty
segs SimpleName ArrayAccess InfixExpression SimpleName num segments
segs SimpleName ArrayAccess InfixExpression NumberLiteral empty
segs SimpleName ArrayAccess InfixExpression SimpleName r
num segments SimpleName InfixExpression ArrayAccess InfixExpression SimpleName r
empty NumberLiteral InfixExpression ArrayAccess InfixExpression SimpleName r
segs SimpleName ArrayAccess PostfixExpression SimpleName num segments
segs SimpleName ArrayAccess Assignment SimpleName r
num segments SimpleName PostfixExpression ArrayAccess Assignment SimpleName r
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName i
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName num sol
int PrimitiveType VariableDeclarationExpression ForStatement PostfixExpression SimpleName i
i SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
num sol SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
segs SimpleName ArrayAccess PostfixExpression SimpleName num segments
segs SimpleName ArrayAccess Assignment NumberLiteral .
num segments SimpleName PostfixExpression ArrayAccess Assignment NumberLiteral .
num segments SimpleName InfixExpression NumberLiteral empty
segment SimpleName SimpleType ArrayType ArrayCreation SimpleName num segments
parts SimpleName VariableDeclarationFragment ArrayCreation SimpleName num segments
p t SimpleName VariableDeclarationFragment NumberLiteral .
double PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName p t
double PrimitiveType VariableDeclarationStatement VariableDeclarationFragment NumberLiteral .
p idx SimpleName VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName p idx
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment NumberLiteral empty
first above SimpleName VariableDeclarationFragment BooleanLiteral false
prev above SimpleName VariableDeclarationFragment BooleanLiteral false
boolean PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName first above
boolean PrimitiveType VariableDeclarationStatement VariableDeclarationFragment BooleanLiteral false
boolean PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName prev above
boolean PrimitiveType VariableDeclarationStatement VariableDeclarationFragment BooleanLiteral false
first above SimpleName VariableDeclarationFragment VariableDeclarationStatement VariableDeclarationFragment SimpleName prev above
first above SimpleName VariableDeclarationFragment VariableDeclarationStatement VariableDeclarationFragment BooleanLiteral false
false BooleanLiteral VariableDeclarationFragment VariableDeclarationStatement VariableDeclarationFragment SimpleName prev above
false BooleanLiteral VariableDeclarationFragment VariableDeclarationStatement VariableDeclarationFragment BooleanLiteral false
i SimpleName VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment SimpleName i
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment NumberLiteral empty
i SimpleName InfixExpression SimpleName num segments
parts SimpleName ArrayAccess SimpleName p idx
i SimpleName InfixExpression NumberLiteral empty
segs SimpleName ArrayAccess InfixExpression SimpleName i
segs SimpleName ArrayAccess InfixExpression NumberLiteral empty
segs SimpleName ArrayAccess SimpleName i
get segment SimpleName MethodInvocation ArrayAccess SimpleName segs
get segment SimpleName MethodInvocation ArrayAccess InfixExpression SimpleName i
get segment SimpleName MethodInvocation ArrayAccess InfixExpression NumberLiteral empty
get segment SimpleName MethodInvocation ArrayAccess SimpleName segs
get segment SimpleName MethodInvocation ArrayAccess SimpleName i
segs SimpleName ArrayAccess MethodInvocation ArrayAccess SimpleName segs
segs SimpleName ArrayAccess MethodInvocation ArrayAccess SimpleName i
parts SimpleName ArrayAccess Assignment MethodInvocation SimpleName get segment
p idx SimpleName ArrayAccess Assignment MethodInvocation SimpleName get segment
parts SimpleName ArrayAccess SimpleName p idx
parts SimpleName ArrayAccess MethodInvocation SimpleName eval
p idx SimpleName ArrayAccess MethodInvocation SimpleName eval
parts SimpleName ArrayAccess MethodInvocation NumberLiteral .
p idx SimpleName ArrayAccess MethodInvocation NumberLiteral .
eval SimpleName MethodInvocation NumberLiteral .
pt SimpleName VariableDeclarationFragment MethodInvocation ArrayAccess SimpleName parts
pt SimpleName VariableDeclarationFragment MethodInvocation ArrayAccess SimpleName p idx
pt SimpleName VariableDeclarationFragment MethodInvocation SimpleName eval
pt SimpleName VariableDeclarationFragment MethodInvocation NumberLiteral .
point ddouble QualifiedName SimpleType VariableDeclarationStatement VariableDeclarationFragment SimpleName pt
p idx SimpleName InfixExpression NumberLiteral empty
pty QualifiedName InfixExpression SimpleName y
prev above SimpleName Assignment ParenthesizedExpression InfixExpression QualifiedName pty
prev above SimpleName Assignment ParenthesizedExpression InfixExpression SimpleName y
first above SimpleName Assignment Assignment SimpleName prev above
pty QualifiedName InfixExpression SimpleName y
above SimpleName VariableDeclarationFragment ParenthesizedExpression InfixExpression QualifiedName pty
above SimpleName VariableDeclarationFragment ParenthesizedExpression InfixExpression SimpleName y
boolean PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName above
prev above SimpleName InfixExpression SimpleName above
p idx SimpleName InfixExpression NumberLiteral empty
parts SimpleName ArrayAccess InfixExpression SimpleName p idx
parts SimpleName ArrayAccess InfixExpression NumberLiteral empty
segs SimpleName ArrayAccess SimpleName i
get segment SimpleName MethodInvocation SimpleName p t
get segment SimpleName MethodInvocation ArrayAccess SimpleName segs
get segment SimpleName MethodInvocation ArrayAccess SimpleName i
p t SimpleName MethodInvocation ArrayAccess SimpleName segs
p t SimpleName MethodInvocation ArrayAccess SimpleName i
parts SimpleName ArrayAccess Assignment MethodInvocation SimpleName get segment
parts SimpleName ArrayAccess Assignment MethodInvocation SimpleName p t
i SimpleName InfixExpression NumberLiteral empty
segs SimpleName ArrayAccess InfixExpression SimpleName i
segs SimpleName ArrayAccess InfixExpression NumberLiteral empty
p t SimpleName Assignment ArrayAccess SimpleName segs
p t SimpleName Assignment ArrayAccess InfixExpression SimpleName i
p t SimpleName Assignment ArrayAccess InfixExpression NumberLiteral empty
prev above SimpleName Assignment SimpleName above
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName i
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName num segments
int PrimitiveType VariableDeclarationExpression ForStatement PostfixExpression SimpleName i
i SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
num segments SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
p idx SimpleName InfixExpression NumberLiteral empty
below SimpleName VariableDeclarationFragment VariableDeclarationStatement VariableDeclarationFragment SimpleName above
p idx SimpleName InfixExpression NumberLiteral empty
p idx SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
empty NumberLiteral InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
above SimpleName Assignment ArrayCreation InfixExpression NumberLiteral empty
p idx SimpleName InfixExpression NumberLiteral empty
below SimpleName Assignment ArrayCreation InfixExpression SimpleName p idx
below SimpleName Assignment ArrayCreation InfixExpression NumberLiteral empty
p idx SimpleName InfixExpression NumberLiteral empty
above SimpleName Assignment ArrayCreation InfixExpression SimpleName p idx
above SimpleName Assignment ArrayCreation InfixExpression NumberLiteral empty
p idx SimpleName InfixExpression NumberLiteral empty
p idx SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
empty NumberLiteral InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
below SimpleName Assignment ArrayCreation InfixExpression NumberLiteral empty
ai SimpleName VariableDeclarationFragment NumberLiteral empty
bi SimpleName VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName ai
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName bi
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment NumberLiteral empty
ai SimpleName VariableDeclarationFragment VariableDeclarationStatement VariableDeclarationFragment SimpleName bi
ai SimpleName VariableDeclarationFragment VariableDeclarationStatement VariableDeclarationFragment NumberLiteral empty
empty NumberLiteral VariableDeclarationFragment VariableDeclarationStatement VariableDeclarationFragment SimpleName bi
empty NumberLiteral VariableDeclarationFragment VariableDeclarationStatement VariableDeclarationFragment NumberLiteral empty
i SimpleName VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment SimpleName i
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment NumberLiteral empty
i SimpleName InfixExpression SimpleName p idx
above SimpleName ArrayAccess PostfixExpression SimpleName ai
parts SimpleName ArrayAccess SimpleName i
above SimpleName ArrayAccess Assignment ArrayAccess SimpleName parts
above SimpleName ArrayAccess Assignment ArrayAccess SimpleName i
below SimpleName ArrayAccess PostfixExpression SimpleName bi
parts SimpleName ArrayAccess SimpleName i
below SimpleName ArrayAccess Assignment ArrayAccess SimpleName parts
below SimpleName ArrayAccess Assignment ArrayAccess SimpleName i
first above SimpleName Assignment PrefixExpression SimpleName first above
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName i
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName p idx
int PrimitiveType VariableDeclarationExpression ForStatement PostfixExpression SimpleName i
i SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
p idx SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
split results SimpleName SimpleType ClassInstanceCreation SimpleName below
split results SimpleName SimpleType ClassInstanceCreation SimpleName above
below SimpleName ClassInstanceCreation SimpleName above
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
double PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
double PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType boolean
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType boolean
int PrimitiveType VariableDeclarationStatement Block IfStatement SimpleName first above
boolean PrimitiveType VariableDeclarationStatement Block IfStatement SimpleName first above
boolean PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
first above SimpleName IfStatement Block VariableDeclarationStatement PrimitiveType int
public Modifier MethodDeclaration SimpleType QualifiedName segmentsplit results
public Modifier MethodDeclaration SimpleName split
public Modifier MethodDeclaration SingleVariableDeclaration PrimitiveType double
public Modifier MethodDeclaration SingleVariableDeclaration SimpleName y
public Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
public Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
public Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType double
public Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
public Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType boolean
public Modifier MethodDeclaration Block IfStatement SimpleName first above
public Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
segmentsplit results QualifiedName SimpleType MethodDeclaration SimpleName split
segmentsplit results QualifiedName SimpleType MethodDeclaration SingleVariableDeclaration PrimitiveType double
segmentsplit results QualifiedName SimpleType MethodDeclaration SingleVariableDeclaration SimpleName y
split SimpleName MethodDeclaration SingleVariableDeclaration PrimitiveType double
split SimpleName MethodDeclaration SingleVariableDeclaration SimpleName y
split SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
split SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
split SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType double
split SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
split SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType boolean
split SimpleName MethodDeclaration Block IfStatement SimpleName first above
split SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
public Modifier TypeDeclaration SimpleName test
public Modifier TypeDeclaration MethodDeclaration Modifier public
public Modifier TypeDeclaration MethodDeclaration SimpleType QualifiedName segmentsplit results
public Modifier TypeDeclaration MethodDeclaration SimpleName split
public Modifier TypeDeclaration MethodDeclaration SingleVariableDeclaration PrimitiveType double
public Modifier TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName y
test SimpleName TypeDeclaration MethodDeclaration Modifier public
test SimpleName TypeDeclaration MethodDeclaration SimpleType QualifiedName segmentsplit results
test SimpleName TypeDeclaration MethodDeclaration SimpleName split
test SimpleName TypeDeclaration MethodDeclaration SingleVariableDeclaration PrimitiveType double
test SimpleName TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName y
