reader SimpleName MethodInvocation SimpleName read
current SimpleName Assignment MethodInvocation SimpleName reader
current SimpleName Assignment MethodInvocation SimpleName read
expect number SimpleName VariableDeclarationFragment BooleanLiteral true
boolean PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName expect number
boolean PrimitiveType VariableDeclarationStatement VariableDeclarationFragment BooleanLiteral true
report unexpected SimpleName MethodInvocation SimpleName current
expect number SimpleName IfStatement ExpressionStatement MethodInvocation SimpleName report unexpected
expect number SimpleName IfStatement ExpressionStatement MethodInvocation SimpleName current
current SimpleName SwitchStatement IfStatement SimpleName expect number
current SimpleName SwitchStatement SwitchCase CharacterLiteral +
current SimpleName SwitchStatement SwitchCase CharacterLiteral -
expect number SimpleName IfStatement SwitchStatement SwitchCase CharacterLiteral +
expect number SimpleName IfStatement SwitchStatement SwitchCase CharacterLiteral -
expect number SimpleName IfStatement SwitchStatement SwitchCase CharacterLiteral .
expect number SimpleName IfStatement SwitchStatement SwitchCase CharacterLiteral empty
+ CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral -
+ CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral .
+ CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
+ CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
+ CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
- CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral .
- CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
- CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
- CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
- CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
. CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
. CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
. CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
. CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
. CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
empty CharacterLiteral SwitchCase SwitchStatement SwitchCase CharacterLiteral empty
x SimpleName VariableDeclarationFragment MethodInvocation SimpleName parse float
float PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName x
float PrimitiveType VariableDeclarationStatement VariableDeclarationFragment MethodInvocation SimpleName parse float
path handler SimpleName MethodInvocation SimpleName lineto vertical rel
path handler SimpleName MethodInvocation SimpleName x
lineto vertical rel SimpleName MethodInvocation SimpleName x
expect number SimpleName Assignment MethodInvocation SimpleName skip comma spaces
current SimpleName SwitchStatement Block VariableDeclarationStatement PrimitiveType float
protected Modifier MethodDeclaration PrimitiveType void
protected Modifier MethodDeclaration SimpleName parsev
protected Modifier MethodDeclaration SimpleType SimpleName parse exception
protected Modifier MethodDeclaration SimpleType SimpleName io exception
protected Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType boolean
void PrimitiveType MethodDeclaration SimpleName parsev
void PrimitiveType MethodDeclaration SimpleType SimpleName parse exception
void PrimitiveType MethodDeclaration SimpleType SimpleName io exception
void PrimitiveType MethodDeclaration Block VariableDeclarationStatement PrimitiveType boolean
parsev SimpleName MethodDeclaration SimpleType SimpleName parse exception
parsev SimpleName MethodDeclaration SimpleType SimpleName io exception
parsev SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType boolean
parse exception SimpleName SimpleType MethodDeclaration SimpleType SimpleName io exception
public Modifier TypeDeclaration SimpleName test
public Modifier TypeDeclaration MethodDeclaration Modifier protected
public Modifier TypeDeclaration MethodDeclaration PrimitiveType void
public Modifier TypeDeclaration MethodDeclaration SimpleName parsev
public Modifier TypeDeclaration MethodDeclaration SimpleType SimpleName parse exception
public Modifier TypeDeclaration MethodDeclaration SimpleType SimpleName io exception
test SimpleName TypeDeclaration MethodDeclaration Modifier protected
test SimpleName TypeDeclaration MethodDeclaration PrimitiveType void
test SimpleName TypeDeclaration MethodDeclaration SimpleName parsev
test SimpleName TypeDeclaration MethodDeclaration SimpleType SimpleName parse exception
test SimpleName TypeDeclaration MethodDeclaration SimpleType SimpleName io exception
