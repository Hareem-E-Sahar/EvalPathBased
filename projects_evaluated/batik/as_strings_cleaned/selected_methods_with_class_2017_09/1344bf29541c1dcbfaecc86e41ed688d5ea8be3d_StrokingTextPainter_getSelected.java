mark SimpleName SimpleType SingleVariableDeclaration SimpleName start mark
mark SimpleName SimpleType SingleVariableDeclaration SimpleName finish mark
start mark SimpleName InfixExpression InfixExpression InfixExpression SimpleName finish mark
basic text painterbasic mark QualifiedName SimpleType VariableDeclarationStatement VariableDeclarationFragment SimpleName start
basic text painterbasic mark QualifiedName SimpleType VariableDeclarationStatement VariableDeclarationFragment SimpleName finish
basic text painterbasic mark QualifiedName SimpleType CastExpression SimpleName start mark
start SimpleName Assignment CastExpression SimpleType QualifiedName basic text painterbasic mark
start SimpleName Assignment CastExpression SimpleName start mark
basic text painterbasic mark QualifiedName SimpleType CastExpression SimpleName finish mark
finish SimpleName Assignment CastExpression SimpleType QualifiedName basic text painterbasic mark
finish SimpleName Assignment CastExpression SimpleName finish mark
class cast exception SimpleName SimpleType SingleVariableDeclaration SimpleName cce
runtime exception SimpleName SimpleType ClassInstanceCreation StringLiteral this mark was not instantiated by this text painter class
start SimpleName MethodInvocation SimpleName get text node
text node SimpleName VariableDeclarationFragment MethodInvocation SimpleName start
text node SimpleName VariableDeclarationFragment MethodInvocation SimpleName get text node
text node SimpleName SimpleType VariableDeclarationStatement VariableDeclarationFragment SimpleName text node
finish SimpleName MethodInvocation SimpleName get text node
text node SimpleName InfixExpression MethodInvocation SimpleName finish
text node SimpleName InfixExpression MethodInvocation SimpleName get text node
runtime exception SimpleName SimpleType ClassInstanceCreation StringLiteral markers are from different text nodes
attributed character iterator SimpleName SimpleType VariableDeclarationStatement VariableDeclarationFragment SimpleName aci
text node SimpleName MethodInvocation SimpleName get attributed character iterator
aci SimpleName Assignment MethodInvocation SimpleName text node
aci SimpleName Assignment MethodInvocation SimpleName get attributed character iterator
int PrimitiveType ArrayType ArrayCreation NumberLiteral empty
result SimpleName VariableDeclarationFragment ArrayCreation ArrayType PrimitiveType int
result SimpleName VariableDeclarationFragment ArrayCreation NumberLiteral empty
int PrimitiveType ArrayType VariableDeclarationStatement VariableDeclarationFragment SimpleName result
result SimpleName ArrayAccess NumberLiteral empty
start SimpleName MethodInvocation SimpleName get hit
start SimpleName MethodInvocation MethodInvocation SimpleName get char index
get hit SimpleName MethodInvocation MethodInvocation SimpleName get char index
result SimpleName ArrayAccess Assignment MethodInvocation SimpleName get char index
empty NumberLiteral ArrayAccess Assignment MethodInvocation SimpleName get char index
result SimpleName ArrayAccess NumberLiteral empty
finish SimpleName MethodInvocation SimpleName get hit
finish SimpleName MethodInvocation MethodInvocation SimpleName get char index
get hit SimpleName MethodInvocation MethodInvocation SimpleName get char index
result SimpleName ArrayAccess Assignment MethodInvocation SimpleName get char index
empty NumberLiteral ArrayAccess Assignment MethodInvocation SimpleName get char index
get text runs SimpleName MethodInvocation SimpleName text node
get text runs SimpleName MethodInvocation SimpleName aci
text node SimpleName MethodInvocation SimpleName aci
text runs SimpleName VariableDeclarationFragment MethodInvocation SimpleName get text runs
text runs SimpleName VariableDeclarationFragment MethodInvocation SimpleName text node
text runs SimpleName VariableDeclarationFragment MethodInvocation SimpleName aci
list SimpleName SimpleType VariableDeclarationStatement VariableDeclarationFragment SimpleName text runs
text runs SimpleName MethodInvocation SimpleName iterator
tr i SimpleName VariableDeclarationFragment MethodInvocation SimpleName text runs
tr i SimpleName VariableDeclarationFragment MethodInvocation SimpleName iterator
iterator SimpleName SimpleType VariableDeclarationStatement VariableDeclarationFragment SimpleName tr i
start glyph index SimpleName VariableDeclarationFragment PrefixExpression NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName start glyph index
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment PrefixExpression NumberLiteral empty
end glyph index SimpleName VariableDeclarationFragment PrefixExpression NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName end glyph index
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment PrefixExpression NumberLiteral empty
text span layout SimpleName SimpleType VariableDeclarationStatement VariableDeclarationFragment SimpleName start layout
text span layout SimpleName SimpleType VariableDeclarationStatement VariableDeclarationFragment SimpleName end layout
start layout SimpleName VariableDeclarationFragment VariableDeclarationStatement VariableDeclarationFragment SimpleName end layout
tr i SimpleName MethodInvocation SimpleName has next
tr i SimpleName MethodInvocation SimpleName next
text run SimpleName SimpleType CastExpression MethodInvocation SimpleName tr i
text run SimpleName SimpleType CastExpression MethodInvocation SimpleName next
tr SimpleName VariableDeclarationFragment CastExpression SimpleType SimpleName text run
tr SimpleName VariableDeclarationFragment CastExpression MethodInvocation SimpleName tr i
tr SimpleName VariableDeclarationFragment CastExpression MethodInvocation SimpleName next
text run SimpleName SimpleType VariableDeclarationStatement VariableDeclarationFragment SimpleName tr
tr SimpleName MethodInvocation SimpleName get layout
tsl SimpleName VariableDeclarationFragment MethodInvocation SimpleName tr
tsl SimpleName VariableDeclarationFragment MethodInvocation SimpleName get layout
text span layout SimpleName SimpleType VariableDeclarationStatement VariableDeclarationFragment SimpleName tsl
start glyph index SimpleName InfixExpression PrefixExpression NumberLiteral empty
result SimpleName ArrayAccess NumberLiteral empty
tsl SimpleName MethodInvocation SimpleName get glyph index
tsl SimpleName MethodInvocation ArrayAccess SimpleName result
tsl SimpleName MethodInvocation ArrayAccess NumberLiteral empty
get glyph index SimpleName MethodInvocation ArrayAccess SimpleName result
get glyph index SimpleName MethodInvocation ArrayAccess NumberLiteral empty
start glyph index SimpleName Assignment MethodInvocation SimpleName tsl
start glyph index SimpleName Assignment MethodInvocation SimpleName get glyph index
start glyph index SimpleName Assignment MethodInvocation ArrayAccess SimpleName result
start glyph index SimpleName Assignment MethodInvocation ArrayAccess NumberLiteral empty
start glyph index SimpleName InfixExpression PrefixExpression NumberLiteral empty
start layout SimpleName Assignment SimpleName tsl
end glyph index SimpleName InfixExpression PrefixExpression NumberLiteral empty
result SimpleName ArrayAccess NumberLiteral empty
tsl SimpleName MethodInvocation SimpleName get glyph index
tsl SimpleName MethodInvocation ArrayAccess SimpleName result
tsl SimpleName MethodInvocation ArrayAccess NumberLiteral empty
get glyph index SimpleName MethodInvocation ArrayAccess SimpleName result
get glyph index SimpleName MethodInvocation ArrayAccess NumberLiteral empty
end glyph index SimpleName Assignment MethodInvocation SimpleName tsl
end glyph index SimpleName Assignment MethodInvocation SimpleName get glyph index
end glyph index SimpleName Assignment MethodInvocation ArrayAccess SimpleName result
end glyph index SimpleName Assignment MethodInvocation ArrayAccess NumberLiteral empty
end glyph index SimpleName InfixExpression PrefixExpression NumberLiteral empty
end layout SimpleName Assignment SimpleName tsl
start glyph index SimpleName InfixExpression PrefixExpression NumberLiteral empty
end glyph index SimpleName InfixExpression PrefixExpression NumberLiteral empty
start layout SimpleName MethodInvocation SimpleName get character count
start layout SimpleName MethodInvocation SimpleName start glyph index
start layout SimpleName MethodInvocation SimpleName start glyph index
get character count SimpleName MethodInvocation SimpleName start glyph index
get character count SimpleName MethodInvocation SimpleName start glyph index
start glyph index SimpleName MethodInvocation SimpleName start glyph index
start char count SimpleName VariableDeclarationFragment MethodInvocation SimpleName start layout
start char count SimpleName VariableDeclarationFragment MethodInvocation SimpleName get character count
start char count SimpleName VariableDeclarationFragment MethodInvocation SimpleName start glyph index
start char count SimpleName VariableDeclarationFragment MethodInvocation SimpleName start glyph index
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName start char count
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment MethodInvocation SimpleName start layout
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment MethodInvocation SimpleName get character count
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment MethodInvocation SimpleName start glyph index
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment MethodInvocation SimpleName start glyph index
end layout SimpleName MethodInvocation SimpleName get character count
end layout SimpleName MethodInvocation SimpleName end glyph index
end layout SimpleName MethodInvocation SimpleName end glyph index
get character count SimpleName MethodInvocation SimpleName end glyph index
get character count SimpleName MethodInvocation SimpleName end glyph index
end glyph index SimpleName MethodInvocation SimpleName end glyph index
end char count SimpleName VariableDeclarationFragment MethodInvocation SimpleName end layout
end char count SimpleName VariableDeclarationFragment MethodInvocation SimpleName get character count
end char count SimpleName VariableDeclarationFragment MethodInvocation SimpleName end glyph index
end char count SimpleName VariableDeclarationFragment MethodInvocation SimpleName end glyph index
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName end char count
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment MethodInvocation SimpleName end layout
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment MethodInvocation SimpleName get character count
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment MethodInvocation SimpleName end glyph index
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment MethodInvocation SimpleName end glyph index
start char count SimpleName InfixExpression NumberLiteral empty
result SimpleName ArrayAccess NumberLiteral empty
result SimpleName ArrayAccess NumberLiteral empty
result SimpleName ArrayAccess InfixExpression ArrayAccess SimpleName result
result SimpleName ArrayAccess InfixExpression ArrayAccess NumberLiteral empty
empty NumberLiteral ArrayAccess InfixExpression ArrayAccess SimpleName result
empty NumberLiteral ArrayAccess InfixExpression ArrayAccess NumberLiteral empty
start layout SimpleName MethodInvocation SimpleName is left to right
result SimpleName ArrayAccess NumberLiteral empty
start char count SimpleName InfixExpression NumberLiteral empty
result SimpleName ArrayAccess Assignment InfixExpression SimpleName start char count
result SimpleName ArrayAccess Assignment InfixExpression NumberLiteral empty
empty NumberLiteral ArrayAccess Assignment InfixExpression SimpleName start char count
empty NumberLiteral ArrayAccess Assignment InfixExpression NumberLiteral empty
result SimpleName ArrayAccess NumberLiteral empty
result SimpleName ArrayAccess NumberLiteral empty
result SimpleName ArrayAccess InfixExpression ArrayAccess SimpleName result
result SimpleName ArrayAccess InfixExpression ArrayAccess NumberLiteral empty
empty NumberLiteral ArrayAccess InfixExpression ArrayAccess SimpleName result
empty NumberLiteral ArrayAccess InfixExpression ArrayAccess NumberLiteral empty
start layout SimpleName MethodInvocation SimpleName is left to right
result SimpleName ArrayAccess NumberLiteral empty
start char count SimpleName InfixExpression NumberLiteral empty
result SimpleName ArrayAccess Assignment InfixExpression SimpleName start char count
result SimpleName ArrayAccess Assignment InfixExpression NumberLiteral empty
empty NumberLiteral ArrayAccess Assignment InfixExpression SimpleName start char count
empty NumberLiteral ArrayAccess Assignment InfixExpression NumberLiteral empty
end char count SimpleName InfixExpression NumberLiteral empty
result SimpleName ArrayAccess NumberLiteral empty
result SimpleName ArrayAccess NumberLiteral empty
result SimpleName ArrayAccess InfixExpression ArrayAccess SimpleName result
result SimpleName ArrayAccess InfixExpression ArrayAccess NumberLiteral empty
empty NumberLiteral ArrayAccess InfixExpression ArrayAccess SimpleName result
empty NumberLiteral ArrayAccess InfixExpression ArrayAccess NumberLiteral empty
end layout SimpleName MethodInvocation SimpleName is left to right
result SimpleName ArrayAccess NumberLiteral empty
end char count SimpleName InfixExpression NumberLiteral empty
result SimpleName ArrayAccess Assignment InfixExpression SimpleName end char count
result SimpleName ArrayAccess Assignment InfixExpression NumberLiteral empty
empty NumberLiteral ArrayAccess Assignment InfixExpression SimpleName end char count
empty NumberLiteral ArrayAccess Assignment InfixExpression NumberLiteral empty
result SimpleName ArrayAccess NumberLiteral empty
result SimpleName ArrayAccess NumberLiteral empty
result SimpleName ArrayAccess InfixExpression ArrayAccess SimpleName result
result SimpleName ArrayAccess InfixExpression ArrayAccess NumberLiteral empty
empty NumberLiteral ArrayAccess InfixExpression ArrayAccess SimpleName result
empty NumberLiteral ArrayAccess InfixExpression ArrayAccess NumberLiteral empty
end layout SimpleName MethodInvocation SimpleName is left to right
result SimpleName ArrayAccess NumberLiteral empty
end char count SimpleName InfixExpression NumberLiteral empty
result SimpleName ArrayAccess Assignment InfixExpression SimpleName end char count
result SimpleName ArrayAccess Assignment InfixExpression NumberLiteral empty
empty NumberLiteral ArrayAccess Assignment InfixExpression SimpleName end char count
empty NumberLiteral ArrayAccess Assignment InfixExpression NumberLiteral empty
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block ReturnStatement SimpleName result
int PrimitiveType VariableDeclarationStatement Block ReturnStatement SimpleName result
public Modifier MethodDeclaration ArrayType PrimitiveType int
public Modifier MethodDeclaration SimpleName get selected
public Modifier MethodDeclaration SingleVariableDeclaration SimpleType SimpleName mark
public Modifier MethodDeclaration SingleVariableDeclaration SimpleName start mark
public Modifier MethodDeclaration SingleVariableDeclaration SimpleType SimpleName mark
public Modifier MethodDeclaration SingleVariableDeclaration SimpleName finish mark
public Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
public Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
public Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
public Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
public Modifier MethodDeclaration Block ReturnStatement SimpleName result
int PrimitiveType ArrayType MethodDeclaration SimpleName get selected
int PrimitiveType ArrayType MethodDeclaration SingleVariableDeclaration SimpleName start mark
int PrimitiveType ArrayType MethodDeclaration SingleVariableDeclaration SimpleName finish mark
get selected SimpleName MethodDeclaration SingleVariableDeclaration SimpleType SimpleName mark
get selected SimpleName MethodDeclaration SingleVariableDeclaration SimpleName start mark
get selected SimpleName MethodDeclaration SingleVariableDeclaration SimpleType SimpleName mark
get selected SimpleName MethodDeclaration SingleVariableDeclaration SimpleName finish mark
get selected SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
get selected SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
get selected SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
get selected SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
get selected SimpleName MethodDeclaration Block ReturnStatement SimpleName result
start mark SimpleName SingleVariableDeclaration MethodDeclaration SingleVariableDeclaration SimpleName finish mark
public Modifier TypeDeclaration SimpleName test
public Modifier TypeDeclaration MethodDeclaration Modifier public
public Modifier TypeDeclaration MethodDeclaration ArrayType PrimitiveType int
public Modifier TypeDeclaration MethodDeclaration SimpleName get selected
public Modifier TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName start mark
public Modifier TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName finish mark
test SimpleName TypeDeclaration MethodDeclaration Modifier public
test SimpleName TypeDeclaration MethodDeclaration ArrayType PrimitiveType int
test SimpleName TypeDeclaration MethodDeclaration SimpleName get selected
test SimpleName TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName start mark
test SimpleName TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName finish mark
