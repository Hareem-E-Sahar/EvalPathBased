element SimpleName SimpleType SingleVariableDeclaration SimpleName elt
elt SimpleName MethodInvocation SimpleName hash code
elt SimpleName MethodInvocation InfixExpression NumberLiteral x fffffff
hash code SimpleName MethodInvocation InfixExpression NumberLiteral x fffffff
hash SimpleName VariableDeclarationFragment InfixExpression MethodInvocation SimpleName elt
hash SimpleName VariableDeclarationFragment InfixExpression MethodInvocation SimpleName hash code
hash SimpleName VariableDeclarationFragment InfixExpression NumberLiteral x fffffff
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName hash
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression NumberLiteral x fffffff
hash SimpleName InfixExpression QualifiedName tablelength
index SimpleName VariableDeclarationFragment InfixExpression SimpleName hash
index SimpleName VariableDeclarationFragment InfixExpression QualifiedName tablelength
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName index
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression SimpleName hash
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression QualifiedName tablelength
table SimpleName ArrayAccess SimpleName index
e SimpleName VariableDeclarationFragment ArrayAccess SimpleName table
e SimpleName VariableDeclarationFragment ArrayAccess SimpleName index
entry SimpleName SimpleType VariableDeclarationExpression VariableDeclarationFragment SimpleName e
e SimpleName Assignment QualifiedName enext
ehash QualifiedName InfixExpression SimpleName hash
e SimpleName MethodInvocation SimpleName get
o SimpleName VariableDeclarationFragment MethodInvocation SimpleName e
o SimpleName VariableDeclarationFragment MethodInvocation SimpleName get
object SimpleName SimpleType VariableDeclarationStatement VariableDeclarationFragment SimpleName o
o SimpleName InfixExpression SimpleName elt
o SimpleName InfixExpression IfStatement ReturnStatement QualifiedName elocation column
elt SimpleName InfixExpression IfStatement ReturnStatement QualifiedName elocation column
e SimpleName InfixExpression ForStatement Assignment SimpleName e
e SimpleName InfixExpression ForStatement Assignment QualifiedName enext
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
public Modifier MethodDeclaration PrimitiveType int
public Modifier MethodDeclaration SimpleName get location column
public Modifier MethodDeclaration SingleVariableDeclaration SimpleType SimpleName element
public Modifier MethodDeclaration SingleVariableDeclaration SimpleName elt
public Modifier MethodDeclaration Block ReturnStatement NumberLiteral empty
int PrimitiveType MethodDeclaration SimpleName get location column
int PrimitiveType MethodDeclaration SingleVariableDeclaration SimpleType SimpleName element
int PrimitiveType MethodDeclaration SingleVariableDeclaration SimpleName elt
int PrimitiveType MethodDeclaration Block ReturnStatement NumberLiteral empty
get location column SimpleName MethodDeclaration SingleVariableDeclaration SimpleType SimpleName element
get location column SimpleName MethodDeclaration SingleVariableDeclaration SimpleName elt
get location column SimpleName MethodDeclaration Block ReturnStatement NumberLiteral empty
public Modifier TypeDeclaration SimpleName test
public Modifier TypeDeclaration MethodDeclaration Modifier public
public Modifier TypeDeclaration MethodDeclaration PrimitiveType int
public Modifier TypeDeclaration MethodDeclaration SimpleName get location column
public Modifier TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName elt
test SimpleName TypeDeclaration MethodDeclaration Modifier public
test SimpleName TypeDeclaration MethodDeclaration PrimitiveType int
test SimpleName TypeDeclaration MethodDeclaration SimpleName get location column
test SimpleName TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName elt
