string SimpleName SimpleType SingleVariableDeclaration SimpleName pattern
string SimpleName SimpleType SingleVariableDeclaration SimpleName str
boolean PrimitiveType SingleVariableDeclaration SimpleName is case sensitive
pattern SimpleName MethodInvocation SimpleName to char array
pat arr SimpleName VariableDeclarationFragment MethodInvocation SimpleName pattern
pat arr SimpleName VariableDeclarationFragment MethodInvocation SimpleName to char array
char PrimitiveType ArrayType VariableDeclarationStatement VariableDeclarationFragment SimpleName pat arr
str SimpleName MethodInvocation SimpleName to char array
str arr SimpleName VariableDeclarationFragment MethodInvocation SimpleName str
str arr SimpleName VariableDeclarationFragment MethodInvocation SimpleName to char array
char PrimitiveType ArrayType VariableDeclarationStatement VariableDeclarationFragment SimpleName str arr
pat idx start SimpleName VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName pat idx start
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment NumberLiteral empty
pat arrlength QualifiedName InfixExpression NumberLiteral empty
pat idx end SimpleName VariableDeclarationFragment InfixExpression QualifiedName pat arrlength
pat idx end SimpleName VariableDeclarationFragment InfixExpression NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName pat idx end
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression QualifiedName pat arrlength
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression NumberLiteral empty
str idx start SimpleName VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName str idx start
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment NumberLiteral empty
str arrlength QualifiedName InfixExpression NumberLiteral empty
str idx end SimpleName VariableDeclarationFragment InfixExpression QualifiedName str arrlength
str idx end SimpleName VariableDeclarationFragment InfixExpression NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName str idx end
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression QualifiedName str arrlength
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression NumberLiteral empty
char PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName ch
contains star SimpleName VariableDeclarationFragment BooleanLiteral false
boolean PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName contains star
boolean PrimitiveType VariableDeclarationStatement VariableDeclarationFragment BooleanLiteral false
char PrimitiveType SingleVariableDeclaration SimpleName a pat arr
a pat arr SimpleName InfixExpression CharacterLiteral *
contains star SimpleName Assignment BooleanLiteral true
char PrimitiveType SingleVariableDeclaration EnhancedForStatement SimpleName pat arr
a pat arr SimpleName SingleVariableDeclaration EnhancedForStatement SimpleName pat arr
pat idx end SimpleName InfixExpression SimpleName str idx end
i SimpleName VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment SimpleName i
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment NumberLiteral empty
i SimpleName InfixExpression SimpleName pat idx end
pat arr SimpleName ArrayAccess SimpleName i
ch SimpleName Assignment ArrayAccess SimpleName pat arr
ch SimpleName Assignment ArrayAccess SimpleName i
ch SimpleName InfixExpression CharacterLiteral ?
str arr SimpleName ArrayAccess SimpleName i
equals SimpleName MethodInvocation SimpleName ch
equals SimpleName MethodInvocation ArrayAccess SimpleName str arr
equals SimpleName MethodInvocation ArrayAccess SimpleName i
equals SimpleName MethodInvocation SimpleName is case sensitive
ch SimpleName MethodInvocation ArrayAccess SimpleName str arr
ch SimpleName MethodInvocation ArrayAccess SimpleName i
ch SimpleName MethodInvocation SimpleName is case sensitive
str arr SimpleName ArrayAccess MethodInvocation SimpleName is case sensitive
i SimpleName ArrayAccess MethodInvocation SimpleName is case sensitive
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName i
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName pat idx end
int PrimitiveType VariableDeclarationExpression ForStatement PostfixExpression SimpleName i
i SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
pat idx end SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
pat idx end SimpleName InfixExpression NumberLiteral empty
pat arr SimpleName ArrayAccess SimpleName pat idx start
ch SimpleName Assignment ArrayAccess SimpleName pat arr
ch SimpleName Assignment ArrayAccess SimpleName pat idx start
ch SimpleName Assignment ParenthesizedExpression InfixExpression CharacterLiteral *
str idx start SimpleName InfixExpression SimpleName str idx end
* CharacterLiteral InfixExpression InfixExpression InfixExpression SimpleName str idx start
* CharacterLiteral InfixExpression InfixExpression InfixExpression SimpleName str idx end
ch SimpleName InfixExpression CharacterLiteral ?
str arr SimpleName ArrayAccess SimpleName str idx start
equals SimpleName MethodInvocation SimpleName ch
equals SimpleName MethodInvocation ArrayAccess SimpleName str arr
equals SimpleName MethodInvocation ArrayAccess SimpleName str idx start
equals SimpleName MethodInvocation SimpleName is case sensitive
ch SimpleName MethodInvocation ArrayAccess SimpleName str arr
ch SimpleName MethodInvocation ArrayAccess SimpleName str idx start
ch SimpleName MethodInvocation SimpleName is case sensitive
str arr SimpleName ArrayAccess MethodInvocation SimpleName is case sensitive
str idx start SimpleName ArrayAccess MethodInvocation SimpleName is case sensitive
str idx start SimpleName InfixExpression SimpleName str idx end
i SimpleName VariableDeclarationFragment SimpleName pat idx start
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment SimpleName i
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment SimpleName pat idx start
i SimpleName InfixExpression SimpleName pat idx end
pat arr SimpleName ArrayAccess SimpleName i
pat arr SimpleName ArrayAccess InfixExpression CharacterLiteral *
i SimpleName ArrayAccess InfixExpression CharacterLiteral *
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName i
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName pat idx end
int PrimitiveType VariableDeclarationExpression ForStatement PostfixExpression SimpleName i
i SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
pat idx end SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
pat arr SimpleName ArrayAccess SimpleName pat idx end
ch SimpleName Assignment ArrayAccess SimpleName pat arr
ch SimpleName Assignment ArrayAccess SimpleName pat idx end
ch SimpleName Assignment ParenthesizedExpression InfixExpression CharacterLiteral *
str idx start SimpleName InfixExpression SimpleName str idx end
* CharacterLiteral InfixExpression InfixExpression InfixExpression SimpleName str idx start
* CharacterLiteral InfixExpression InfixExpression InfixExpression SimpleName str idx end
ch SimpleName InfixExpression CharacterLiteral ?
str arr SimpleName ArrayAccess SimpleName str idx end
equals SimpleName MethodInvocation SimpleName ch
equals SimpleName MethodInvocation ArrayAccess SimpleName str arr
equals SimpleName MethodInvocation ArrayAccess SimpleName str idx end
equals SimpleName MethodInvocation SimpleName is case sensitive
ch SimpleName MethodInvocation ArrayAccess SimpleName str arr
ch SimpleName MethodInvocation ArrayAccess SimpleName str idx end
ch SimpleName MethodInvocation SimpleName is case sensitive
str arr SimpleName ArrayAccess MethodInvocation SimpleName is case sensitive
str idx end SimpleName ArrayAccess MethodInvocation SimpleName is case sensitive
str idx start SimpleName InfixExpression SimpleName str idx end
i SimpleName VariableDeclarationFragment SimpleName pat idx start
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment SimpleName i
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment SimpleName pat idx start
i SimpleName InfixExpression SimpleName pat idx end
pat arr SimpleName ArrayAccess SimpleName i
pat arr SimpleName ArrayAccess InfixExpression CharacterLiteral *
i SimpleName ArrayAccess InfixExpression CharacterLiteral *
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName i
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName pat idx end
int PrimitiveType VariableDeclarationExpression ForStatement PostfixExpression SimpleName i
i SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
pat idx end SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
pat idx start SimpleName InfixExpression SimpleName pat idx end
str idx start SimpleName InfixExpression SimpleName str idx end
pat idx start SimpleName InfixExpression InfixExpression InfixExpression SimpleName str idx start
pat idx start SimpleName InfixExpression InfixExpression InfixExpression SimpleName str idx end
pat idx end SimpleName InfixExpression InfixExpression InfixExpression SimpleName str idx start
pat idx end SimpleName InfixExpression InfixExpression InfixExpression SimpleName str idx end
pat idx tmp SimpleName VariableDeclarationFragment PrefixExpression NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName pat idx tmp
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment PrefixExpression NumberLiteral empty
pat idx start SimpleName InfixExpression NumberLiteral empty
i SimpleName VariableDeclarationFragment InfixExpression SimpleName pat idx start
i SimpleName VariableDeclarationFragment InfixExpression NumberLiteral empty
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment SimpleName i
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment InfixExpression SimpleName pat idx start
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment InfixExpression NumberLiteral empty
i SimpleName InfixExpression SimpleName pat idx end
pat arr SimpleName ArrayAccess SimpleName i
pat arr SimpleName ArrayAccess InfixExpression CharacterLiteral *
i SimpleName ArrayAccess InfixExpression CharacterLiteral *
pat idx tmp SimpleName Assignment SimpleName i
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName i
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName pat idx end
int PrimitiveType VariableDeclarationExpression ForStatement PostfixExpression SimpleName i
i SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
pat idx end SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
pat idx start SimpleName InfixExpression NumberLiteral empty
pat idx tmp SimpleName InfixExpression InfixExpression SimpleName pat idx start
pat idx tmp SimpleName InfixExpression InfixExpression NumberLiteral empty
pat idx tmp SimpleName InfixExpression SimpleName pat idx start
pat idx tmp SimpleName InfixExpression NumberLiteral empty
pat idx start SimpleName InfixExpression NumberLiteral empty
pat length SimpleName VariableDeclarationFragment InfixExpression SimpleName pat idx tmp
pat length SimpleName VariableDeclarationFragment InfixExpression SimpleName pat idx start
pat length SimpleName VariableDeclarationFragment InfixExpression NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName pat length
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression SimpleName pat idx tmp
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression SimpleName pat idx start
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression NumberLiteral empty
str idx end SimpleName InfixExpression SimpleName str idx start
str idx end SimpleName InfixExpression InfixExpression NumberLiteral empty
str idx start SimpleName InfixExpression InfixExpression NumberLiteral empty
str length SimpleName VariableDeclarationFragment InfixExpression InfixExpression SimpleName str idx end
str length SimpleName VariableDeclarationFragment InfixExpression InfixExpression SimpleName str idx start
str length SimpleName VariableDeclarationFragment InfixExpression NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName str length
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression NumberLiteral empty
found idx SimpleName VariableDeclarationFragment PrefixExpression NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName found idx
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment PrefixExpression NumberLiteral empty
i SimpleName VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment SimpleName i
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment NumberLiteral empty
str length SimpleName InfixExpression SimpleName pat length
i SimpleName InfixExpression InfixExpression SimpleName str length
i SimpleName InfixExpression InfixExpression SimpleName pat length
j SimpleName VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment SimpleName j
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment NumberLiteral empty
j SimpleName InfixExpression SimpleName pat length
pat idx start SimpleName InfixExpression SimpleName j
pat idx start SimpleName InfixExpression NumberLiteral empty
j SimpleName InfixExpression NumberLiteral empty
pat arr SimpleName ArrayAccess InfixExpression SimpleName pat idx start
pat arr SimpleName ArrayAccess InfixExpression SimpleName j
pat arr SimpleName ArrayAccess InfixExpression NumberLiteral empty
ch SimpleName Assignment ArrayAccess SimpleName pat arr
ch SimpleName Assignment ArrayAccess InfixExpression SimpleName pat idx start
ch SimpleName Assignment ArrayAccess InfixExpression SimpleName j
ch SimpleName Assignment ArrayAccess InfixExpression NumberLiteral empty
ch SimpleName InfixExpression CharacterLiteral ?
str idx start SimpleName InfixExpression SimpleName i
str idx start SimpleName InfixExpression SimpleName j
i SimpleName InfixExpression SimpleName j
str arr SimpleName ArrayAccess InfixExpression SimpleName str idx start
str arr SimpleName ArrayAccess InfixExpression SimpleName i
str arr SimpleName ArrayAccess InfixExpression SimpleName j
equals SimpleName MethodInvocation SimpleName ch
equals SimpleName MethodInvocation ArrayAccess SimpleName str arr
equals SimpleName MethodInvocation ArrayAccess InfixExpression SimpleName str idx start
equals SimpleName MethodInvocation ArrayAccess InfixExpression SimpleName i
equals SimpleName MethodInvocation ArrayAccess InfixExpression SimpleName j
equals SimpleName MethodInvocation SimpleName is case sensitive
ch SimpleName MethodInvocation ArrayAccess SimpleName str arr
ch SimpleName MethodInvocation ArrayAccess InfixExpression SimpleName str idx start
ch SimpleName MethodInvocation ArrayAccess InfixExpression SimpleName i
ch SimpleName MethodInvocation ArrayAccess InfixExpression SimpleName j
ch SimpleName MethodInvocation SimpleName is case sensitive
str arr SimpleName ArrayAccess MethodInvocation SimpleName is case sensitive
str idx start SimpleName InfixExpression ArrayAccess MethodInvocation SimpleName is case sensitive
i SimpleName InfixExpression ArrayAccess MethodInvocation SimpleName is case sensitive
j SimpleName InfixExpression ArrayAccess MethodInvocation SimpleName is case sensitive
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName j
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName pat length
int PrimitiveType VariableDeclarationExpression ForStatement PostfixExpression SimpleName j
j SimpleName InfixExpression ForStatement PostfixExpression SimpleName j
pat length SimpleName InfixExpression ForStatement PostfixExpression SimpleName j
str idx start SimpleName InfixExpression SimpleName i
found idx SimpleName Assignment InfixExpression SimpleName str idx start
found idx SimpleName Assignment InfixExpression SimpleName i
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName i
int PrimitiveType VariableDeclarationExpression ForStatement PostfixExpression SimpleName i
i SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
str loop SimpleName LabeledStatement ForStatement VariableDeclarationExpression PrimitiveType int
str loop SimpleName LabeledStatement ForStatement InfixExpression SimpleName i
str loop SimpleName LabeledStatement ForStatement PostfixExpression SimpleName i
found idx SimpleName InfixExpression PrefixExpression NumberLiteral empty
pat idx start SimpleName Assignment SimpleName pat idx tmp
found idx SimpleName InfixExpression SimpleName pat length
str idx start SimpleName Assignment InfixExpression SimpleName found idx
str idx start SimpleName Assignment InfixExpression SimpleName pat length
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block LabeledStatement SimpleName str loop
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block LabeledStatement SimpleName str loop
int PrimitiveType VariableDeclarationStatement Block LabeledStatement SimpleName str loop
i SimpleName VariableDeclarationFragment SimpleName pat idx start
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment SimpleName i
int PrimitiveType VariableDeclarationExpression VariableDeclarationFragment SimpleName pat idx start
i SimpleName InfixExpression SimpleName pat idx end
pat arr SimpleName ArrayAccess SimpleName i
pat arr SimpleName ArrayAccess InfixExpression CharacterLiteral *
i SimpleName ArrayAccess InfixExpression CharacterLiteral *
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName i
int PrimitiveType VariableDeclarationExpression ForStatement InfixExpression SimpleName pat idx end
int PrimitiveType VariableDeclarationExpression ForStatement PostfixExpression SimpleName i
i SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
pat idx end SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType char
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType boolean
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType char
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType boolean
int PrimitiveType VariableDeclarationStatement Block EnhancedForStatement SimpleName pat arr
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType char
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType boolean
int PrimitiveType VariableDeclarationStatement Block EnhancedForStatement SimpleName pat arr
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType char
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType boolean
int PrimitiveType VariableDeclarationStatement Block EnhancedForStatement SimpleName pat arr
char PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType boolean
char PrimitiveType VariableDeclarationStatement Block EnhancedForStatement SimpleName pat arr
boolean PrimitiveType VariableDeclarationStatement Block EnhancedForStatement SimpleName pat arr
public Modifier MethodDeclaration Modifier static
public Modifier MethodDeclaration PrimitiveType boolean
public Modifier MethodDeclaration SimpleName match
public Modifier MethodDeclaration SingleVariableDeclaration SimpleType SimpleName string
public Modifier MethodDeclaration SingleVariableDeclaration SimpleName pattern
public Modifier MethodDeclaration SingleVariableDeclaration SimpleType SimpleName string
public Modifier MethodDeclaration SingleVariableDeclaration SimpleName str
static Modifier MethodDeclaration PrimitiveType boolean
static Modifier MethodDeclaration SimpleName match
static Modifier MethodDeclaration SingleVariableDeclaration SimpleType SimpleName string
static Modifier MethodDeclaration SingleVariableDeclaration SimpleName pattern
static Modifier MethodDeclaration SingleVariableDeclaration SimpleType SimpleName string
static Modifier MethodDeclaration SingleVariableDeclaration SimpleName str
static Modifier MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
static Modifier MethodDeclaration SingleVariableDeclaration SimpleName is case sensitive
boolean PrimitiveType MethodDeclaration SimpleName match
boolean PrimitiveType MethodDeclaration SingleVariableDeclaration SimpleType SimpleName string
boolean PrimitiveType MethodDeclaration SingleVariableDeclaration SimpleName pattern
boolean PrimitiveType MethodDeclaration SingleVariableDeclaration SimpleType SimpleName string
boolean PrimitiveType MethodDeclaration SingleVariableDeclaration SimpleName str
boolean PrimitiveType MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
boolean PrimitiveType MethodDeclaration SingleVariableDeclaration SimpleName is case sensitive
boolean PrimitiveType MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
boolean PrimitiveType MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
boolean PrimitiveType MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
boolean PrimitiveType MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
boolean PrimitiveType MethodDeclaration Block VariableDeclarationStatement PrimitiveType char
boolean PrimitiveType MethodDeclaration Block VariableDeclarationStatement PrimitiveType boolean
boolean PrimitiveType MethodDeclaration Block EnhancedForStatement SimpleName pat arr
boolean PrimitiveType MethodDeclaration Block ReturnStatement BooleanLiteral true
match SimpleName MethodDeclaration SingleVariableDeclaration SimpleType SimpleName string
match SimpleName MethodDeclaration SingleVariableDeclaration SimpleName pattern
match SimpleName MethodDeclaration SingleVariableDeclaration SimpleType SimpleName string
match SimpleName MethodDeclaration SingleVariableDeclaration SimpleName str
match SimpleName MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
match SimpleName MethodDeclaration SingleVariableDeclaration SimpleName is case sensitive
match SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
match SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
match SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
match SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
match SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType char
match SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType boolean
match SimpleName MethodDeclaration Block EnhancedForStatement SimpleName pat arr
match SimpleName MethodDeclaration Block ReturnStatement BooleanLiteral true
pattern SimpleName SingleVariableDeclaration MethodDeclaration SingleVariableDeclaration SimpleName str
pattern SimpleName SingleVariableDeclaration MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
pattern SimpleName SingleVariableDeclaration MethodDeclaration SingleVariableDeclaration SimpleName is case sensitive
str SimpleName SingleVariableDeclaration MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
str SimpleName SingleVariableDeclaration MethodDeclaration SingleVariableDeclaration SimpleName is case sensitive
public Modifier TypeDeclaration SimpleName test
public Modifier TypeDeclaration MethodDeclaration Modifier public
public Modifier TypeDeclaration MethodDeclaration Modifier static
public Modifier TypeDeclaration MethodDeclaration PrimitiveType boolean
public Modifier TypeDeclaration MethodDeclaration SimpleName match
public Modifier TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName pattern
public Modifier TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName str
public Modifier TypeDeclaration MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
public Modifier TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName is case sensitive
test SimpleName TypeDeclaration MethodDeclaration Modifier public
test SimpleName TypeDeclaration MethodDeclaration Modifier static
test SimpleName TypeDeclaration MethodDeclaration PrimitiveType boolean
test SimpleName TypeDeclaration MethodDeclaration SimpleName match
test SimpleName TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName pattern
test SimpleName TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName str
test SimpleName TypeDeclaration MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
test SimpleName TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName is case sensitive
