boolean PrimitiveType SingleVariableDeclaration SimpleName immediately
state SimpleName MethodInvocation SimpleName compare and set
state SimpleName MethodInvocation QualifiedName stateopened
state SimpleName MethodInvocation QualifiedName stateimmediate
compare and set SimpleName MethodInvocation QualifiedName stateopened
compare and set SimpleName MethodInvocation QualifiedName stateimmediate
stateopened QualifiedName MethodInvocation QualifiedName stateimmediate
state SimpleName MethodInvocation SimpleName compare and set
state SimpleName MethodInvocation QualifiedName stategraceful
state SimpleName MethodInvocation QualifiedName stateimmediate
compare and set SimpleName MethodInvocation QualifiedName stategraceful
compare and set SimpleName MethodInvocation QualifiedName stateimmediate
stategraceful QualifiedName MethodInvocation QualifiedName stateimmediate
state SimpleName MethodInvocation InfixExpression MethodInvocation SimpleName state
state SimpleName MethodInvocation InfixExpression MethodInvocation SimpleName compare and set
state SimpleName MethodInvocation InfixExpression MethodInvocation QualifiedName stategraceful
state SimpleName MethodInvocation InfixExpression MethodInvocation QualifiedName stateimmediate
compare and set SimpleName MethodInvocation InfixExpression MethodInvocation SimpleName state
compare and set SimpleName MethodInvocation InfixExpression MethodInvocation SimpleName compare and set
compare and set SimpleName MethodInvocation InfixExpression MethodInvocation QualifiedName stategraceful
compare and set SimpleName MethodInvocation InfixExpression MethodInvocation QualifiedName stateimmediate
stateopened QualifiedName MethodInvocation InfixExpression MethodInvocation SimpleName state
stateopened QualifiedName MethodInvocation InfixExpression MethodInvocation SimpleName compare and set
stateopened QualifiedName MethodInvocation InfixExpression MethodInvocation QualifiedName stategraceful
stateopened QualifiedName MethodInvocation InfixExpression MethodInvocation QualifiedName stateimmediate
stateimmediate QualifiedName MethodInvocation InfixExpression MethodInvocation SimpleName state
stateimmediate QualifiedName MethodInvocation InfixExpression MethodInvocation SimpleName compare and set
stateimmediate QualifiedName MethodInvocation InfixExpression MethodInvocation QualifiedName stategraceful
stateimmediate QualifiedName MethodInvocation InfixExpression MethodInvocation QualifiedName stateimmediate
log SimpleName MethodInvocation SimpleName debug
log SimpleName MethodInvocation StringLiteral closing {} immediately
debug SimpleName MethodInvocation StringLiteral closing {} immediately
log SimpleName MethodInvocation SimpleName debug
log SimpleName MethodInvocation StringLiteral {} closed
debug SimpleName MethodInvocation StringLiteral {} closed
state SimpleName MethodInvocation SimpleName get
state SimpleName MethodInvocation InfixExpression QualifiedName stateclosed
get SimpleName MethodInvocation InfixExpression QualifiedName stateclosed
state SimpleName MethodInvocation InfixExpression ConditionalExpression StringLiteral closed
get SimpleName MethodInvocation InfixExpression ConditionalExpression StringLiteral closed
stateclosed QualifiedName InfixExpression ConditionalExpression StringLiteral closed
state SimpleName MethodInvocation InfixExpression ConditionalExpression StringLiteral closing
get SimpleName MethodInvocation InfixExpression ConditionalExpression StringLiteral closing
stateclosed QualifiedName InfixExpression ConditionalExpression StringLiteral closing
closed StringLiteral ConditionalExpression StringLiteral closing
log SimpleName MethodInvocation SimpleName debug
log SimpleName MethodInvocation StringLiteral {} is already {}
log SimpleName MethodInvocation ConditionalExpression InfixExpression QualifiedName stateclosed
log SimpleName MethodInvocation ConditionalExpression StringLiteral closed
log SimpleName MethodInvocation ConditionalExpression StringLiteral closing
debug SimpleName MethodInvocation StringLiteral {} is already {}
debug SimpleName MethodInvocation ConditionalExpression InfixExpression QualifiedName stateclosed
debug SimpleName MethodInvocation ConditionalExpression StringLiteral closed
debug SimpleName MethodInvocation ConditionalExpression StringLiteral closing
{} is already {} StringLiteral MethodInvocation ConditionalExpression InfixExpression QualifiedName stateclosed
{} is already {} StringLiteral MethodInvocation ConditionalExpression StringLiteral closed
{} is already {} StringLiteral MethodInvocation ConditionalExpression StringLiteral closing
state SimpleName MethodInvocation SimpleName compare and set
state SimpleName MethodInvocation QualifiedName stateopened
state SimpleName MethodInvocation QualifiedName stategraceful
compare and set SimpleName MethodInvocation QualifiedName stateopened
compare and set SimpleName MethodInvocation QualifiedName stategraceful
stateopened QualifiedName MethodInvocation QualifiedName stategraceful
log SimpleName MethodInvocation SimpleName debug
log SimpleName MethodInvocation StringLiteral closing {} gracefully
debug SimpleName MethodInvocation StringLiteral closing {} gracefully
ssh future SimpleName SimpleType ParameterizedType SimpleType SimpleName close future
grace SimpleName VariableDeclarationFragment MethodInvocation SimpleName do close gracefully
ssh future listener SimpleName SimpleType ParameterizedType SimpleType SimpleName close future
close future SimpleName SimpleType SingleVariableDeclaration SimpleName future
state SimpleName MethodInvocation SimpleName compare and set
state SimpleName MethodInvocation QualifiedName stategraceful
state SimpleName MethodInvocation QualifiedName stateimmediate
compare and set SimpleName MethodInvocation QualifiedName stategraceful
compare and set SimpleName MethodInvocation QualifiedName stateimmediate
stategraceful QualifiedName MethodInvocation QualifiedName stateimmediate
log SimpleName MethodInvocation SimpleName debug
log SimpleName MethodInvocation StringLiteral {} closed
log SimpleName MethodInvocation ThisExpression SimpleName abstract closeable
debug SimpleName MethodInvocation StringLiteral {} closed
debug SimpleName MethodInvocation ThisExpression SimpleName abstract closeable
{} closed StringLiteral MethodInvocation ThisExpression SimpleName abstract closeable
public Modifier MethodDeclaration PrimitiveType void
public Modifier MethodDeclaration SimpleName operation complete
public Modifier MethodDeclaration SingleVariableDeclaration SimpleType SimpleName close future
public Modifier MethodDeclaration SingleVariableDeclaration SimpleName future
void PrimitiveType MethodDeclaration SimpleName operation complete
void PrimitiveType MethodDeclaration SingleVariableDeclaration SimpleType SimpleName close future
void PrimitiveType MethodDeclaration SingleVariableDeclaration SimpleName future
operation complete SimpleName MethodDeclaration SingleVariableDeclaration SimpleType SimpleName close future
operation complete SimpleName MethodDeclaration SingleVariableDeclaration SimpleName future
grace SimpleName MethodInvocation SimpleName add listener
state SimpleName MethodInvocation SimpleName compare and set
state SimpleName MethodInvocation QualifiedName stategraceful
state SimpleName MethodInvocation QualifiedName stateimmediate
compare and set SimpleName MethodInvocation QualifiedName stategraceful
compare and set SimpleName MethodInvocation QualifiedName stateimmediate
stategraceful QualifiedName MethodInvocation QualifiedName stateimmediate
log SimpleName MethodInvocation SimpleName debug
log SimpleName MethodInvocation StringLiteral {} closed
debug SimpleName MethodInvocation StringLiteral {} closed
state SimpleName MethodInvocation SimpleName get
state SimpleName MethodInvocation InfixExpression QualifiedName stateclosed
get SimpleName MethodInvocation InfixExpression QualifiedName stateclosed
state SimpleName MethodInvocation InfixExpression ConditionalExpression StringLiteral closed
get SimpleName MethodInvocation InfixExpression ConditionalExpression StringLiteral closed
stateclosed QualifiedName InfixExpression ConditionalExpression StringLiteral closed
state SimpleName MethodInvocation InfixExpression ConditionalExpression StringLiteral closing
get SimpleName MethodInvocation InfixExpression ConditionalExpression StringLiteral closing
stateclosed QualifiedName InfixExpression ConditionalExpression StringLiteral closing
closed StringLiteral ConditionalExpression StringLiteral closing
log SimpleName MethodInvocation SimpleName debug
log SimpleName MethodInvocation StringLiteral {} is already {}
log SimpleName MethodInvocation ConditionalExpression InfixExpression QualifiedName stateclosed
log SimpleName MethodInvocation ConditionalExpression StringLiteral closed
log SimpleName MethodInvocation ConditionalExpression StringLiteral closing
debug SimpleName MethodInvocation StringLiteral {} is already {}
debug SimpleName MethodInvocation ConditionalExpression InfixExpression QualifiedName stateclosed
debug SimpleName MethodInvocation ConditionalExpression StringLiteral closed
debug SimpleName MethodInvocation ConditionalExpression StringLiteral closing
{} is already {} StringLiteral MethodInvocation ConditionalExpression InfixExpression QualifiedName stateclosed
{} is already {} StringLiteral MethodInvocation ConditionalExpression StringLiteral closed
{} is already {} StringLiteral MethodInvocation ConditionalExpression StringLiteral closing
immediately SimpleName IfStatement Block ReturnStatement SimpleName close future
public Modifier MethodDeclaration SimpleType SimpleName close future
public Modifier MethodDeclaration SimpleName close
public Modifier MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
public Modifier MethodDeclaration SingleVariableDeclaration SimpleName immediately
public Modifier MethodDeclaration Block IfStatement SimpleName immediately
public Modifier MethodDeclaration Block ReturnStatement SimpleName close future
close future SimpleName SimpleType MethodDeclaration SimpleName close
close future SimpleName SimpleType MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
close future SimpleName SimpleType MethodDeclaration SingleVariableDeclaration SimpleName immediately
close SimpleName MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
close SimpleName MethodDeclaration SingleVariableDeclaration SimpleName immediately
close SimpleName MethodDeclaration Block IfStatement SimpleName immediately
close SimpleName MethodDeclaration Block ReturnStatement SimpleName close future
public Modifier TypeDeclaration SimpleName test
public Modifier TypeDeclaration MethodDeclaration Modifier public
public Modifier TypeDeclaration MethodDeclaration SimpleType SimpleName close future
public Modifier TypeDeclaration MethodDeclaration SimpleName close
public Modifier TypeDeclaration MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
public Modifier TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName immediately
test SimpleName TypeDeclaration MethodDeclaration Modifier public
test SimpleName TypeDeclaration MethodDeclaration SimpleType SimpleName close future
test SimpleName TypeDeclaration MethodDeclaration SimpleName close
test SimpleName TypeDeclaration MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
test SimpleName TypeDeclaration MethodDeclaration SingleVariableDeclaration SimpleName immediately
