byte PrimitiveType ArrayType SingleVariableDeclaration SimpleName binary data
boolean PrimitiveType SingleVariableDeclaration SimpleName is chunked
binary datalength QualifiedName InfixExpression SimpleName eightbit
length data bits SimpleName VariableDeclarationFragment InfixExpression QualifiedName binary datalength
length data bits SimpleName VariableDeclarationFragment InfixExpression SimpleName eightbit
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName length data bits
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression QualifiedName binary datalength
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression SimpleName eightbit
length data bits SimpleName InfixExpression SimpleName twentyfourbitgroup
fewer than bits SimpleName VariableDeclarationFragment InfixExpression SimpleName length data bits
fewer than bits SimpleName VariableDeclarationFragment InfixExpression SimpleName twentyfourbitgroup
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName fewer than bits
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression SimpleName length data bits
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression SimpleName twentyfourbitgroup
length data bits SimpleName InfixExpression SimpleName twentyfourbitgroup
number triplets SimpleName VariableDeclarationFragment InfixExpression SimpleName length data bits
number triplets SimpleName VariableDeclarationFragment InfixExpression SimpleName twentyfourbitgroup
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName number triplets
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression SimpleName length data bits
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment InfixExpression SimpleName twentyfourbitgroup
byte PrimitiveType ArrayType VariableDeclarationStatement VariableDeclarationFragment SimpleName encoded data
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName encoded data length
nbr chunks SimpleName VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName nbr chunks
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment NumberLiteral empty
fewer than bits SimpleName InfixExpression NumberLiteral empty
number triplets SimpleName InfixExpression NumberLiteral empty
number triplets SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
empty NumberLiteral InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
encoded data length SimpleName Assignment InfixExpression NumberLiteral empty
number triplets SimpleName InfixExpression NumberLiteral empty
encoded data length SimpleName Assignment InfixExpression SimpleName number triplets
encoded data length SimpleName Assignment InfixExpression NumberLiteral empty
chunk separatorlength QualifiedName InfixExpression NumberLiteral empty
float PrimitiveType CastExpression SimpleName encoded data length
float PrimitiveType CastExpression InfixExpression SimpleName chunk size
encoded data length SimpleName CastExpression InfixExpression SimpleName chunk size
math SimpleName MethodInvocation SimpleName ceil
math SimpleName MethodInvocation InfixExpression CastExpression PrimitiveType float
math SimpleName MethodInvocation InfixExpression CastExpression SimpleName encoded data length
math SimpleName MethodInvocation InfixExpression SimpleName chunk size
ceil SimpleName MethodInvocation InfixExpression CastExpression PrimitiveType float
ceil SimpleName MethodInvocation InfixExpression CastExpression SimpleName encoded data length
ceil SimpleName MethodInvocation InfixExpression SimpleName chunk size
int PrimitiveType CastExpression MethodInvocation SimpleName math
int PrimitiveType CastExpression MethodInvocation SimpleName ceil
int PrimitiveType CastExpression MethodInvocation InfixExpression SimpleName chunk size
chunk separatorlength QualifiedName InfixExpression ConditionalExpression NumberLiteral empty
empty NumberLiteral InfixExpression ConditionalExpression NumberLiteral empty
chunk separatorlength QualifiedName InfixExpression ConditionalExpression CastExpression PrimitiveType int
empty NumberLiteral InfixExpression ConditionalExpression CastExpression PrimitiveType int
empty NumberLiteral ConditionalExpression CastExpression PrimitiveType int
empty NumberLiteral ConditionalExpression CastExpression MethodInvocation SimpleName math
empty NumberLiteral ConditionalExpression CastExpression MethodInvocation SimpleName ceil
nbr chunks SimpleName Assignment ConditionalExpression InfixExpression QualifiedName chunk separatorlength
nbr chunks SimpleName Assignment ConditionalExpression InfixExpression NumberLiteral empty
nbr chunks SimpleName Assignment ConditionalExpression NumberLiteral empty
nbr chunks SimpleName Assignment ConditionalExpression CastExpression PrimitiveType int
nbr chunks SimpleName InfixExpression QualifiedName chunk separatorlength
encoded data length SimpleName Assignment InfixExpression SimpleName nbr chunks
encoded data length SimpleName Assignment InfixExpression QualifiedName chunk separatorlength
byte PrimitiveType ArrayType ArrayCreation SimpleName encoded data length
encoded data SimpleName Assignment ArrayCreation ArrayType PrimitiveType byte
encoded data SimpleName Assignment ArrayCreation SimpleName encoded data length
byte PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName k
byte PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName l
byte PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName b
byte PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName b
byte PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName b
encoded index SimpleName VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName encoded index
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName data index
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName i
next separator index SimpleName VariableDeclarationFragment SimpleName chunk size
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName next separator index
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName chunk size
chunks so far SimpleName VariableDeclarationFragment NumberLiteral empty
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName chunks so far
int PrimitiveType VariableDeclarationStatement VariableDeclarationFragment NumberLiteral empty
i SimpleName Assignment NumberLiteral empty
i SimpleName InfixExpression SimpleName number triplets
i SimpleName InfixExpression NumberLiteral empty
data index SimpleName Assignment InfixExpression SimpleName i
data index SimpleName Assignment InfixExpression NumberLiteral empty
binary data SimpleName ArrayAccess SimpleName data index
b SimpleName Assignment ArrayAccess SimpleName binary data
b SimpleName Assignment ArrayAccess SimpleName data index
data index SimpleName InfixExpression NumberLiteral empty
binary data SimpleName ArrayAccess InfixExpression SimpleName data index
binary data SimpleName ArrayAccess InfixExpression NumberLiteral empty
b SimpleName Assignment ArrayAccess SimpleName binary data
b SimpleName Assignment ArrayAccess InfixExpression SimpleName data index
b SimpleName Assignment ArrayAccess InfixExpression NumberLiteral empty
data index SimpleName InfixExpression NumberLiteral empty
binary data SimpleName ArrayAccess InfixExpression SimpleName data index
binary data SimpleName ArrayAccess InfixExpression NumberLiteral empty
b SimpleName Assignment ArrayAccess SimpleName binary data
b SimpleName Assignment ArrayAccess InfixExpression SimpleName data index
b SimpleName Assignment ArrayAccess InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral x f
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression SimpleName b
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral x f
l SimpleName Assignment CastExpression PrimitiveType byte
b SimpleName InfixExpression NumberLiteral x
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression SimpleName b
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral x
k SimpleName Assignment CastExpression PrimitiveType byte
b SimpleName InfixExpression SimpleName sign
b SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
sign SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral empty
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression SimpleName b
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral empty
b SimpleName InfixExpression InfixExpression NumberLiteral xc
empty NumberLiteral InfixExpression InfixExpression NumberLiteral xc
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral xc
empty NumberLiteral InfixExpression ConditionalExpression CastExpression PrimitiveType byte
empty NumberLiteral InfixExpression ConditionalExpression CastExpression PrimitiveType byte
byte PrimitiveType CastExpression ConditionalExpression CastExpression PrimitiveType byte
val SimpleName VariableDeclarationFragment ConditionalExpression InfixExpression NumberLiteral empty
val SimpleName VariableDeclarationFragment ConditionalExpression CastExpression PrimitiveType byte
val SimpleName VariableDeclarationFragment ConditionalExpression CastExpression PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName val
b SimpleName InfixExpression SimpleName sign
b SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
sign SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral empty
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression SimpleName b
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral empty
b SimpleName InfixExpression InfixExpression NumberLiteral xf
empty NumberLiteral InfixExpression InfixExpression NumberLiteral xf
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral xf
empty NumberLiteral InfixExpression ConditionalExpression CastExpression PrimitiveType byte
empty NumberLiteral InfixExpression ConditionalExpression CastExpression PrimitiveType byte
byte PrimitiveType CastExpression ConditionalExpression CastExpression PrimitiveType byte
val SimpleName VariableDeclarationFragment ConditionalExpression InfixExpression NumberLiteral empty
val SimpleName VariableDeclarationFragment ConditionalExpression CastExpression PrimitiveType byte
val SimpleName VariableDeclarationFragment ConditionalExpression CastExpression PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName val
b SimpleName InfixExpression SimpleName sign
b SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
sign SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral empty
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression SimpleName b
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral empty
b SimpleName InfixExpression InfixExpression NumberLiteral xfc
empty NumberLiteral InfixExpression InfixExpression NumberLiteral xfc
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral xfc
empty NumberLiteral InfixExpression ConditionalExpression CastExpression PrimitiveType byte
empty NumberLiteral InfixExpression ConditionalExpression CastExpression PrimitiveType byte
byte PrimitiveType CastExpression ConditionalExpression CastExpression PrimitiveType byte
val SimpleName VariableDeclarationFragment ConditionalExpression InfixExpression NumberLiteral empty
val SimpleName VariableDeclarationFragment ConditionalExpression CastExpression PrimitiveType byte
val SimpleName VariableDeclarationFragment ConditionalExpression CastExpression PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName val
encoded data SimpleName ArrayAccess SimpleName encoded index
look up base alphabet SimpleName ArrayAccess SimpleName val
encoded data SimpleName ArrayAccess Assignment ArrayAccess SimpleName look up base alphabet
encoded data SimpleName ArrayAccess Assignment ArrayAccess SimpleName val
encoded index SimpleName ArrayAccess Assignment ArrayAccess SimpleName look up base alphabet
encoded index SimpleName ArrayAccess Assignment ArrayAccess SimpleName val
encoded index SimpleName InfixExpression NumberLiteral empty
encoded data SimpleName ArrayAccess InfixExpression SimpleName encoded index
encoded data SimpleName ArrayAccess InfixExpression NumberLiteral empty
k SimpleName InfixExpression NumberLiteral empty
val SimpleName InfixExpression ParenthesizedExpression InfixExpression SimpleName k
val SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
look up base alphabet SimpleName ArrayAccess InfixExpression SimpleName val
encoded data SimpleName ArrayAccess Assignment ArrayAccess SimpleName look up base alphabet
encoded index SimpleName InfixExpression NumberLiteral empty
encoded data SimpleName ArrayAccess InfixExpression SimpleName encoded index
encoded data SimpleName ArrayAccess InfixExpression NumberLiteral empty
l SimpleName InfixExpression NumberLiteral empty
l SimpleName InfixExpression ParenthesizedExpression InfixExpression SimpleName val
empty NumberLiteral InfixExpression ParenthesizedExpression InfixExpression SimpleName val
look up base alphabet SimpleName ArrayAccess InfixExpression SimpleName val
encoded data SimpleName ArrayAccess Assignment ArrayAccess SimpleName look up base alphabet
encoded index SimpleName InfixExpression NumberLiteral empty
encoded data SimpleName ArrayAccess InfixExpression SimpleName encoded index
encoded data SimpleName ArrayAccess InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral x f
look up base alphabet SimpleName ArrayAccess InfixExpression SimpleName b
look up base alphabet SimpleName ArrayAccess InfixExpression NumberLiteral x f
encoded data SimpleName ArrayAccess Assignment ArrayAccess SimpleName look up base alphabet
encoded index SimpleName Assignment NumberLiteral empty
encoded index SimpleName InfixExpression SimpleName next separator index
system SimpleName MethodInvocation SimpleName arraycopy
system SimpleName MethodInvocation SimpleName chunk separator
system SimpleName MethodInvocation NumberLiteral empty
system SimpleName MethodInvocation SimpleName encoded data
system SimpleName MethodInvocation SimpleName encoded index
arraycopy SimpleName MethodInvocation SimpleName chunk separator
arraycopy SimpleName MethodInvocation NumberLiteral empty
arraycopy SimpleName MethodInvocation SimpleName encoded data
arraycopy SimpleName MethodInvocation SimpleName encoded index
arraycopy SimpleName MethodInvocation QualifiedName chunk separatorlength
chunk separator SimpleName MethodInvocation NumberLiteral empty
chunk separator SimpleName MethodInvocation SimpleName encoded data
chunk separator SimpleName MethodInvocation SimpleName encoded index
chunk separator SimpleName MethodInvocation QualifiedName chunk separatorlength
empty NumberLiteral MethodInvocation SimpleName encoded data
empty NumberLiteral MethodInvocation SimpleName encoded index
empty NumberLiteral MethodInvocation QualifiedName chunk separatorlength
encoded data SimpleName MethodInvocation SimpleName encoded index
encoded data SimpleName MethodInvocation QualifiedName chunk separatorlength
encoded index SimpleName MethodInvocation QualifiedName chunk separatorlength
chunks so far SimpleName InfixExpression NumberLiteral empty
chunk size SimpleName InfixExpression ParenthesizedExpression InfixExpression SimpleName chunks so far
chunk size SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
chunks so far SimpleName InfixExpression QualifiedName chunk separatorlength
encoded index SimpleName Assignment QualifiedName chunk separatorlength
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
i SimpleName Assignment ForStatement InfixExpression SimpleName i
i SimpleName Assignment ForStatement InfixExpression SimpleName number triplets
empty NumberLiteral Assignment ForStatement InfixExpression SimpleName i
empty NumberLiteral Assignment ForStatement InfixExpression SimpleName number triplets
i SimpleName Assignment ForStatement PostfixExpression SimpleName i
empty NumberLiteral Assignment ForStatement PostfixExpression SimpleName i
i SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
number triplets SimpleName InfixExpression ForStatement PostfixExpression SimpleName i
i SimpleName InfixExpression NumberLiteral empty
data index SimpleName Assignment InfixExpression SimpleName i
data index SimpleName Assignment InfixExpression NumberLiteral empty
fewer than bits SimpleName InfixExpression SimpleName eightbit
binary data SimpleName ArrayAccess SimpleName data index
b SimpleName Assignment ArrayAccess SimpleName binary data
b SimpleName Assignment ArrayAccess SimpleName data index
b SimpleName InfixExpression NumberLiteral x
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression SimpleName b
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral x
k SimpleName Assignment CastExpression PrimitiveType byte
b SimpleName InfixExpression SimpleName sign
b SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
sign SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral empty
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression SimpleName b
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral empty
b SimpleName InfixExpression InfixExpression NumberLiteral xc
empty NumberLiteral InfixExpression InfixExpression NumberLiteral xc
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral xc
byte PrimitiveType CastExpression ConditionalExpression CastExpression PrimitiveType byte
val SimpleName VariableDeclarationFragment ConditionalExpression CastExpression PrimitiveType byte
val SimpleName VariableDeclarationFragment ConditionalExpression CastExpression PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName val
encoded data SimpleName ArrayAccess SimpleName encoded index
look up base alphabet SimpleName ArrayAccess SimpleName val
encoded data SimpleName ArrayAccess Assignment ArrayAccess SimpleName look up base alphabet
encoded data SimpleName ArrayAccess Assignment ArrayAccess SimpleName val
encoded index SimpleName ArrayAccess Assignment ArrayAccess SimpleName look up base alphabet
encoded index SimpleName ArrayAccess Assignment ArrayAccess SimpleName val
encoded index SimpleName InfixExpression NumberLiteral empty
encoded data SimpleName ArrayAccess InfixExpression SimpleName encoded index
encoded data SimpleName ArrayAccess InfixExpression NumberLiteral empty
k SimpleName InfixExpression NumberLiteral empty
look up base alphabet SimpleName ArrayAccess InfixExpression SimpleName k
look up base alphabet SimpleName ArrayAccess InfixExpression NumberLiteral empty
encoded data SimpleName ArrayAccess Assignment ArrayAccess SimpleName look up base alphabet
encoded index SimpleName InfixExpression NumberLiteral empty
encoded data SimpleName ArrayAccess InfixExpression SimpleName encoded index
encoded data SimpleName ArrayAccess InfixExpression NumberLiteral empty
encoded data SimpleName ArrayAccess Assignment SimpleName pad
encoded index SimpleName InfixExpression ArrayAccess Assignment SimpleName pad
empty NumberLiteral InfixExpression ArrayAccess Assignment SimpleName pad
encoded index SimpleName InfixExpression NumberLiteral empty
encoded data SimpleName ArrayAccess InfixExpression SimpleName encoded index
encoded data SimpleName ArrayAccess InfixExpression NumberLiteral empty
encoded data SimpleName ArrayAccess Assignment SimpleName pad
encoded index SimpleName InfixExpression ArrayAccess Assignment SimpleName pad
empty NumberLiteral InfixExpression ArrayAccess Assignment SimpleName pad
fewer than bits SimpleName InfixExpression SimpleName sixteenbit
binary data SimpleName ArrayAccess SimpleName data index
b SimpleName Assignment ArrayAccess SimpleName binary data
b SimpleName Assignment ArrayAccess SimpleName data index
data index SimpleName InfixExpression NumberLiteral empty
binary data SimpleName ArrayAccess InfixExpression SimpleName data index
binary data SimpleName ArrayAccess InfixExpression NumberLiteral empty
b SimpleName Assignment ArrayAccess SimpleName binary data
b SimpleName Assignment ArrayAccess InfixExpression SimpleName data index
b SimpleName Assignment ArrayAccess InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral x f
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression SimpleName b
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral x f
l SimpleName Assignment CastExpression PrimitiveType byte
b SimpleName InfixExpression NumberLiteral x
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression SimpleName b
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral x
k SimpleName Assignment CastExpression PrimitiveType byte
b SimpleName InfixExpression SimpleName sign
b SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
sign SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral empty
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression SimpleName b
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral empty
b SimpleName InfixExpression InfixExpression NumberLiteral xc
empty NumberLiteral InfixExpression InfixExpression NumberLiteral xc
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral xc
byte PrimitiveType CastExpression ConditionalExpression CastExpression PrimitiveType byte
val SimpleName VariableDeclarationFragment ConditionalExpression CastExpression PrimitiveType byte
val SimpleName VariableDeclarationFragment ConditionalExpression CastExpression PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName val
b SimpleName InfixExpression SimpleName sign
b SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
sign SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral empty
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression SimpleName b
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral empty
b SimpleName InfixExpression NumberLiteral empty
b SimpleName InfixExpression InfixExpression NumberLiteral xf
empty NumberLiteral InfixExpression InfixExpression NumberLiteral xf
byte PrimitiveType CastExpression ParenthesizedExpression InfixExpression NumberLiteral xf
byte PrimitiveType CastExpression ConditionalExpression CastExpression PrimitiveType byte
val SimpleName VariableDeclarationFragment ConditionalExpression CastExpression PrimitiveType byte
val SimpleName VariableDeclarationFragment ConditionalExpression CastExpression PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement VariableDeclarationFragment SimpleName val
encoded data SimpleName ArrayAccess SimpleName encoded index
look up base alphabet SimpleName ArrayAccess SimpleName val
encoded data SimpleName ArrayAccess Assignment ArrayAccess SimpleName look up base alphabet
encoded data SimpleName ArrayAccess Assignment ArrayAccess SimpleName val
encoded index SimpleName ArrayAccess Assignment ArrayAccess SimpleName look up base alphabet
encoded index SimpleName ArrayAccess Assignment ArrayAccess SimpleName val
encoded index SimpleName InfixExpression NumberLiteral empty
encoded data SimpleName ArrayAccess InfixExpression SimpleName encoded index
encoded data SimpleName ArrayAccess InfixExpression NumberLiteral empty
k SimpleName InfixExpression NumberLiteral empty
val SimpleName InfixExpression ParenthesizedExpression InfixExpression SimpleName k
val SimpleName InfixExpression ParenthesizedExpression InfixExpression NumberLiteral empty
look up base alphabet SimpleName ArrayAccess InfixExpression SimpleName val
encoded data SimpleName ArrayAccess Assignment ArrayAccess SimpleName look up base alphabet
encoded index SimpleName InfixExpression NumberLiteral empty
encoded data SimpleName ArrayAccess InfixExpression SimpleName encoded index
encoded data SimpleName ArrayAccess InfixExpression NumberLiteral empty
l SimpleName InfixExpression NumberLiteral empty
look up base alphabet SimpleName ArrayAccess InfixExpression SimpleName l
look up base alphabet SimpleName ArrayAccess InfixExpression NumberLiteral empty
encoded data SimpleName ArrayAccess Assignment ArrayAccess SimpleName look up base alphabet
encoded index SimpleName InfixExpression NumberLiteral empty
encoded data SimpleName ArrayAccess InfixExpression SimpleName encoded index
encoded data SimpleName ArrayAccess InfixExpression NumberLiteral empty
encoded data SimpleName ArrayAccess Assignment SimpleName pad
encoded index SimpleName InfixExpression ArrayAccess Assignment SimpleName pad
empty NumberLiteral InfixExpression ArrayAccess Assignment SimpleName pad
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
chunks so far SimpleName InfixExpression SimpleName nbr chunks
encoded data length SimpleName InfixExpression QualifiedName chunk separatorlength
system SimpleName MethodInvocation SimpleName arraycopy
system SimpleName MethodInvocation SimpleName chunk separator
system SimpleName MethodInvocation NumberLiteral empty
system SimpleName MethodInvocation SimpleName encoded data
system SimpleName MethodInvocation InfixExpression SimpleName encoded data length
system SimpleName MethodInvocation InfixExpression QualifiedName chunk separatorlength
arraycopy SimpleName MethodInvocation SimpleName chunk separator
arraycopy SimpleName MethodInvocation NumberLiteral empty
arraycopy SimpleName MethodInvocation SimpleName encoded data
arraycopy SimpleName MethodInvocation InfixExpression SimpleName encoded data length
arraycopy SimpleName MethodInvocation InfixExpression QualifiedName chunk separatorlength
arraycopy SimpleName MethodInvocation QualifiedName chunk separatorlength
chunk separator SimpleName MethodInvocation NumberLiteral empty
chunk separator SimpleName MethodInvocation SimpleName encoded data
chunk separator SimpleName MethodInvocation InfixExpression SimpleName encoded data length
chunk separator SimpleName MethodInvocation InfixExpression QualifiedName chunk separatorlength
chunk separator SimpleName MethodInvocation QualifiedName chunk separatorlength
empty NumberLiteral MethodInvocation SimpleName encoded data
empty NumberLiteral MethodInvocation InfixExpression SimpleName encoded data length
empty NumberLiteral MethodInvocation InfixExpression QualifiedName chunk separatorlength
empty NumberLiteral MethodInvocation QualifiedName chunk separatorlength
encoded data SimpleName MethodInvocation InfixExpression SimpleName encoded data length
encoded data SimpleName MethodInvocation InfixExpression QualifiedName chunk separatorlength
encoded data SimpleName MethodInvocation QualifiedName chunk separatorlength
encoded data length SimpleName InfixExpression MethodInvocation QualifiedName chunk separatorlength
chunk separatorlength QualifiedName InfixExpression MethodInvocation QualifiedName chunk separatorlength
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block IfStatement SimpleName is chunked
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block IfStatement SimpleName is chunked
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
int PrimitiveType VariableDeclarationStatement Block IfStatement SimpleName is chunked
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
is chunked SimpleName IfStatement Block VariableDeclarationStatement PrimitiveType byte
is chunked SimpleName IfStatement Block VariableDeclarationStatement PrimitiveType byte
is chunked SimpleName IfStatement Block VariableDeclarationStatement PrimitiveType byte
is chunked SimpleName IfStatement Block VariableDeclarationStatement PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType byte
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
byte PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block VariableDeclarationStatement PrimitiveType int
int PrimitiveType VariableDeclarationStatement Block IfStatement SimpleName is chunked
int PrimitiveType VariableDeclarationStatement Block IfStatement SimpleName is chunked
int PrimitiveType VariableDeclarationStatement Block ReturnStatement SimpleName encoded data
is chunked SimpleName IfStatement Block ReturnStatement SimpleName encoded data
public Modifier MethodDeclaration Modifier static
public Modifier MethodDeclaration ArrayType PrimitiveType byte
public Modifier MethodDeclaration SimpleName encode base
public Modifier MethodDeclaration SingleVariableDeclaration ArrayType PrimitiveType byte
public Modifier MethodDeclaration SingleVariableDeclaration SimpleName binary data
public Modifier MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
public Modifier MethodDeclaration SingleVariableDeclaration SimpleName is chunked
static Modifier MethodDeclaration ArrayType PrimitiveType byte
static Modifier MethodDeclaration SimpleName encode base
static Modifier MethodDeclaration SingleVariableDeclaration ArrayType PrimitiveType byte
static Modifier MethodDeclaration SingleVariableDeclaration SimpleName binary data
static Modifier MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
static Modifier MethodDeclaration SingleVariableDeclaration SimpleName is chunked
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
static Modifier MethodDeclaration Block IfStatement SimpleName is chunked
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType byte
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType byte
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType byte
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType byte
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType byte
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
static Modifier MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
static Modifier MethodDeclaration Block IfStatement SimpleName is chunked
static Modifier MethodDeclaration Block ReturnStatement SimpleName encoded data
byte PrimitiveType ArrayType MethodDeclaration SimpleName encode base
byte PrimitiveType ArrayType MethodDeclaration SingleVariableDeclaration SimpleName binary data
byte PrimitiveType ArrayType MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
byte PrimitiveType ArrayType MethodDeclaration SingleVariableDeclaration SimpleName is chunked
encode base SimpleName MethodDeclaration SingleVariableDeclaration ArrayType PrimitiveType byte
encode base SimpleName MethodDeclaration SingleVariableDeclaration SimpleName binary data
encode base SimpleName MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
encode base SimpleName MethodDeclaration SingleVariableDeclaration SimpleName is chunked
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
encode base SimpleName MethodDeclaration Block IfStatement SimpleName is chunked
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType byte
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType byte
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType byte
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType byte
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType byte
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
encode base SimpleName MethodDeclaration Block VariableDeclarationStatement PrimitiveType int
encode base SimpleName MethodDeclaration Block IfStatement SimpleName is chunked
encode base SimpleName MethodDeclaration Block ReturnStatement SimpleName encoded data
binary data SimpleName SingleVariableDeclaration MethodDeclaration SingleVariableDeclaration PrimitiveType boolean
binary data SimpleName SingleVariableDeclaration MethodDeclaration SingleVariableDeclaration SimpleName is chunked
public Modifier TypeDeclaration SimpleName test
public Modifier TypeDeclaration MethodDeclaration Modifier public
public Modifier TypeDeclaration MethodDeclaration Modifier static
public Modifier TypeDeclaration MethodDeclaration ArrayType PrimitiveType byte
