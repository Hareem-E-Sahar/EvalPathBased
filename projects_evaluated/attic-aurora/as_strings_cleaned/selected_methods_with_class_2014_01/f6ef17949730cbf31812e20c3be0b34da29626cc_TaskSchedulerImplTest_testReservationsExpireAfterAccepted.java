storage util SimpleName MethodInvocation SimpleName expect operations
expect task still pending query SimpleName MethodInvocation SimpleName task a
expect active job fetch SimpleName MethodInvocation SimpleName task a
expect launch attempt SimpleName MethodInvocation BooleanLiteral false
preemptor SimpleName MethodInvocation SimpleName find preemption slot for
preemptor SimpleName MethodInvocation StringLiteral a
preemptor SimpleName MethodInvocation SimpleName empty job
find preemption slot for SimpleName MethodInvocation StringLiteral a
find preemption slot for SimpleName MethodInvocation SimpleName empty job
a StringLiteral MethodInvocation SimpleName empty job
expect SimpleName MethodInvocation MethodInvocation SimpleName preemptor
expect SimpleName MethodInvocation MethodInvocation SimpleName find preemption slot for
expect SimpleName MethodInvocation MethodInvocation StringLiteral a
expect SimpleName MethodInvocation MethodInvocation SimpleName empty job
offer SimpleName MethodInvocation SimpleName get slave id
offer SimpleName MethodInvocation MethodInvocation SimpleName get value
get slave id SimpleName MethodInvocation MethodInvocation SimpleName get value
optional SimpleName MethodInvocation SimpleName of
optional SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName offer
optional SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName get slave id
optional SimpleName MethodInvocation MethodInvocation SimpleName get value
of SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName offer
of SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName get slave id
of SimpleName MethodInvocation MethodInvocation SimpleName get value
expect SimpleName MethodInvocation MethodInvocation SimpleName and return
preemptor SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName and return
find preemption slot for SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName and return
a StringLiteral MethodInvocation MethodInvocation MethodInvocation SimpleName and return
empty job SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName and return
expect SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName optional
expect SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName of
and return SimpleName MethodInvocation MethodInvocation SimpleName optional
and return SimpleName MethodInvocation MethodInvocation SimpleName of
and return SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName get value
expect task still pending query SimpleName MethodInvocation SimpleName task a
expect active job fetch SimpleName MethodInvocation SimpleName task a
optional SimpleName SimpleType ParameterizedType SimpleType SimpleName task info
function SimpleName SimpleType ParameterizedType SimpleType SimpleName offer
expect launch attempt SimpleName MethodInvocation BooleanLiteral true
first assignment SimpleName VariableDeclarationFragment MethodInvocation SimpleName expect launch attempt
first assignment SimpleName VariableDeclarationFragment MethodInvocation BooleanLiteral true
expect assigned SimpleName MethodInvocation SimpleName task a
expect task still pending query SimpleName MethodInvocation SimpleName task b
expect active job fetch SimpleName MethodInvocation SimpleName task b
optional SimpleName SimpleType ParameterizedType SimpleType SimpleName task info
function SimpleName SimpleType ParameterizedType SimpleType SimpleName offer
expect launch attempt SimpleName MethodInvocation BooleanLiteral true
second assignment SimpleName VariableDeclarationFragment MethodInvocation SimpleName expect launch attempt
second assignment SimpleName VariableDeclarationFragment MethodInvocation BooleanLiteral true
assigner SimpleName MethodInvocation SimpleName maybe assign
assigner SimpleName MethodInvocation SimpleName offer
assigner SimpleName MethodInvocation SimpleName task b
assigner SimpleName MethodInvocation SimpleName empty job
maybe assign SimpleName MethodInvocation SimpleName offer
maybe assign SimpleName MethodInvocation SimpleName task b
maybe assign SimpleName MethodInvocation SimpleName empty job
offer SimpleName MethodInvocation SimpleName task b
offer SimpleName MethodInvocation SimpleName empty job
task b SimpleName MethodInvocation SimpleName empty job
expect SimpleName MethodInvocation MethodInvocation SimpleName assigner
expect SimpleName MethodInvocation MethodInvocation SimpleName maybe assign
expect SimpleName MethodInvocation MethodInvocation SimpleName offer
expect SimpleName MethodInvocation MethodInvocation SimpleName task b
expect SimpleName MethodInvocation MethodInvocation SimpleName empty job
task info SimpleName MethodInvocation SimpleName get default instance
optional SimpleName MethodInvocation SimpleName of
optional SimpleName MethodInvocation MethodInvocation SimpleName task info
optional SimpleName MethodInvocation MethodInvocation SimpleName get default instance
of SimpleName MethodInvocation MethodInvocation SimpleName task info
of SimpleName MethodInvocation MethodInvocation SimpleName get default instance
expect SimpleName MethodInvocation MethodInvocation SimpleName and return
assigner SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName and return
maybe assign SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName and return
offer SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName and return
task b SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName and return
empty job SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName and return
expect SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName optional
expect SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName of
and return SimpleName MethodInvocation MethodInvocation SimpleName optional
and return SimpleName MethodInvocation MethodInvocation SimpleName of
and return SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName task info
and return SimpleName MethodInvocation MethodInvocation MethodInvocation SimpleName get default instance
control SimpleName MethodInvocation SimpleName replay
scheduler SimpleName MethodInvocation SimpleName schedule
scheduler SimpleName MethodInvocation StringLiteral a
schedule SimpleName MethodInvocation StringLiteral a
assert equals SimpleName MethodInvocation SimpleName try again
assert equals SimpleName MethodInvocation MethodInvocation SimpleName scheduler
assert equals SimpleName MethodInvocation MethodInvocation SimpleName schedule
assert equals SimpleName MethodInvocation MethodInvocation StringLiteral a
try again SimpleName MethodInvocation MethodInvocation SimpleName scheduler
try again SimpleName MethodInvocation MethodInvocation SimpleName schedule
try again SimpleName MethodInvocation MethodInvocation StringLiteral a
scheduler SimpleName MethodInvocation SimpleName schedule
scheduler SimpleName MethodInvocation StringLiteral a
schedule SimpleName MethodInvocation StringLiteral a
assert equals SimpleName MethodInvocation SimpleName success
assert equals SimpleName MethodInvocation MethodInvocation SimpleName scheduler
assert equals SimpleName MethodInvocation MethodInvocation SimpleName schedule
assert equals SimpleName MethodInvocation MethodInvocation StringLiteral a
success SimpleName MethodInvocation MethodInvocation SimpleName scheduler
success SimpleName MethodInvocation MethodInvocation SimpleName schedule
success SimpleName MethodInvocation MethodInvocation StringLiteral a
first assignment SimpleName MethodInvocation SimpleName get value
first assignment SimpleName MethodInvocation MethodInvocation SimpleName apply
get value SimpleName MethodInvocation MethodInvocation SimpleName apply
first assignment SimpleName MethodInvocation MethodInvocation SimpleName offer
get value SimpleName MethodInvocation MethodInvocation SimpleName offer
apply SimpleName MethodInvocation SimpleName offer
task state change SimpleName MethodInvocation SimpleName transition
task state change SimpleName MethodInvocation SimpleName task a
task state change SimpleName MethodInvocation SimpleName pending
transition SimpleName MethodInvocation SimpleName task a
transition SimpleName MethodInvocation SimpleName pending
task a SimpleName MethodInvocation SimpleName pending
event sink SimpleName MethodInvocation SimpleName post
event sink SimpleName MethodInvocation MethodInvocation SimpleName task state change
event sink SimpleName MethodInvocation MethodInvocation SimpleName transition
event sink SimpleName MethodInvocation MethodInvocation SimpleName task a
event sink SimpleName MethodInvocation MethodInvocation SimpleName pending
post SimpleName MethodInvocation MethodInvocation SimpleName task state change
post SimpleName MethodInvocation MethodInvocation SimpleName transition
post SimpleName MethodInvocation MethodInvocation SimpleName task a
post SimpleName MethodInvocation MethodInvocation SimpleName pending
clock SimpleName MethodInvocation SimpleName advance
clock SimpleName MethodInvocation SimpleName half reservation duration
advance SimpleName MethodInvocation SimpleName half reservation duration
scheduler SimpleName MethodInvocation SimpleName schedule
scheduler SimpleName MethodInvocation StringLiteral b
schedule SimpleName MethodInvocation StringLiteral b
assert equals SimpleName MethodInvocation SimpleName success
assert equals SimpleName MethodInvocation MethodInvocation SimpleName scheduler
assert equals SimpleName MethodInvocation MethodInvocation SimpleName schedule
assert equals SimpleName MethodInvocation MethodInvocation StringLiteral b
success SimpleName MethodInvocation MethodInvocation SimpleName scheduler
success SimpleName MethodInvocation MethodInvocation SimpleName schedule
success SimpleName MethodInvocation MethodInvocation StringLiteral b
second assignment SimpleName MethodInvocation SimpleName get value
second assignment SimpleName MethodInvocation MethodInvocation SimpleName apply
get value SimpleName MethodInvocation MethodInvocation SimpleName apply
second assignment SimpleName MethodInvocation MethodInvocation SimpleName offer
get value SimpleName MethodInvocation MethodInvocation SimpleName offer
apply SimpleName MethodInvocation SimpleName offer
test SimpleName MarkerAnnotation MethodDeclaration Modifier public
test SimpleName MarkerAnnotation MethodDeclaration PrimitiveType void
test SimpleName MarkerAnnotation MethodDeclaration SimpleName test reservations expire after accepted
test SimpleName MarkerAnnotation MethodDeclaration SimpleType QualifiedName offer queuelaunch exception
public Modifier MethodDeclaration PrimitiveType void
public Modifier MethodDeclaration SimpleName test reservations expire after accepted
public Modifier MethodDeclaration SimpleType QualifiedName offer queuelaunch exception
void PrimitiveType MethodDeclaration SimpleName test reservations expire after accepted
void PrimitiveType MethodDeclaration SimpleType QualifiedName offer queuelaunch exception
test reservations expire after accepted SimpleName MethodDeclaration SimpleType QualifiedName offer queuelaunch exception
public Modifier TypeDeclaration SimpleName test
public Modifier TypeDeclaration MethodDeclaration MarkerAnnotation SimpleName test
public Modifier TypeDeclaration MethodDeclaration Modifier public
public Modifier TypeDeclaration MethodDeclaration PrimitiveType void
public Modifier TypeDeclaration MethodDeclaration SimpleName test reservations expire after accepted
public Modifier TypeDeclaration MethodDeclaration SimpleType QualifiedName offer queuelaunch exception
test SimpleName TypeDeclaration MethodDeclaration MarkerAnnotation SimpleName test
test SimpleName TypeDeclaration MethodDeclaration Modifier public
test SimpleName TypeDeclaration MethodDeclaration PrimitiveType void
test SimpleName TypeDeclaration MethodDeclaration SimpleName test reservations expire after accepted
test SimpleName TypeDeclaration MethodDeclaration SimpleType QualifiedName offer queuelaunch exception
